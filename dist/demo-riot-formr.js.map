{"version":3,"file":"demo-riot-formr.js","sources":["../node_modules/riot/riot.esm.js","../src/formr.riot","../src/ialert.riot","../src/ibutton.riot","../src/icheckbox.riot","../src/icolorpicker.riot","../src/idatetimepicker.riot","../src/ihr.riot","../src/iradio.riot","../src/irange.riot","../src/irow.riot","../src/iselect.riot","../src/itext.riot","../src/itexteditor.riot","../src/jlabel.riot","../src/jtooltip.riot","../src/formr.js","../src/iimagepicker.riot","../src/ihidden.riot","../src/ipassword.riot","../src/jaddon.riot","../src/jhelp.riot","../src/jicon.riot","../src/demo.js","../src/app.riot"],"sourcesContent":["/* Riot v4.6.2, @license MIT */\nconst COMPONENTS_IMPLEMENTATION_MAP = new Map(),\n      DOM_COMPONENT_INSTANCE_PROPERTY = Symbol('riot-component'),\n      PLUGINS_SET = new Set(),\n      IS_DIRECTIVE = 'is',\n      VALUE_ATTRIBUTE = 'value',\n      ATTRIBUTES_KEY_SYMBOL = Symbol('attributes'),\n      TEMPLATE_KEY_SYMBOL = Symbol('template');\n\nvar globals = /*#__PURE__*/Object.freeze({\n  COMPONENTS_IMPLEMENTATION_MAP: COMPONENTS_IMPLEMENTATION_MAP,\n  DOM_COMPONENT_INSTANCE_PROPERTY: DOM_COMPONENT_INSTANCE_PROPERTY,\n  PLUGINS_SET: PLUGINS_SET,\n  IS_DIRECTIVE: IS_DIRECTIVE,\n  VALUE_ATTRIBUTE: VALUE_ATTRIBUTE,\n  ATTRIBUTES_KEY_SYMBOL: ATTRIBUTES_KEY_SYMBOL,\n  TEMPLATE_KEY_SYMBOL: TEMPLATE_KEY_SYMBOL\n});\n\n/**\n * Quick type checking\n * @param   {*} element - anything\n * @param   {string} type - type definition\n * @returns {boolean} true if the type corresponds\n */\nfunction checkType(element, type) {\n  return typeof element === type;\n}\n/**\n * Check that will be passed if its argument is a function\n * @param   {*} value - value to check\n * @returns {boolean} - true if the value is a function\n */\n\nfunction isFunction(value) {\n  return checkType(value, 'function');\n}\n\nfunction noop() {\n  return this;\n}\n/**\n * Autobind the methods of a source object to itself\n * @param   {Object} source - probably a riot tag instance\n * @param   {Array<string>} methods - list of the methods to autobind\n * @returns {Object} the original object received\n */\n\nfunction autobindMethods(source, methods) {\n  methods.forEach(method => {\n    source[method] = source[method].bind(source);\n  });\n  return source;\n}\n/**\n * Call the first argument received only if it's a function otherwise return it as it is\n * @param   {*} source - anything\n * @returns {*} anything\n */\n\nfunction callOrAssign(source) {\n  return isFunction(source) ? source.prototype && source.prototype.constructor ? new source() : source() : source;\n}\n\n/**\n * Convert a string from camel case to dash-case\n * @param   {string} string - probably a component tag name\n * @returns {string} component name normalized\n */\n\n/**\n * Convert a string containing dashes to camel case\n * @param   {string} string - input string\n * @returns {string} my-string -> myString\n */\nfunction dashToCamelCase(string) {\n  return string.replace(/-(\\w)/g, (_, c) => c.toUpperCase());\n}\n/**\n * Move all the child nodes from a source tag to another\n * @param   {HTMLElement} source - source node\n * @param   {HTMLElement} target - target node\n * @returns {undefined} it's a void method ¯\\_(ツ)_/¯\n */\n// Ignore this helper because it's needed only for svg tags\n\n\nfunction moveChildren(source, target) {\n  if (source.firstChild) {\n    target.appendChild(source.firstChild);\n    moveChildren(source, target);\n  }\n}\n/**\n * Remove the child nodes from any DOM node\n * @param   {HTMLElement} node - target node\n * @returns {undefined}\n */\n\n\nfunction cleanNode(node) {\n  clearChildren(node.childNodes);\n}\n/**\n * Clear multiple children in a node\n * @param   {HTMLElement[]} children - direct children nodes\n * @returns {undefined}\n */\n\n\nfunction clearChildren(children) {\n  Array.from(children).forEach(n => n.parentNode && n.parentNode.removeChild(n));\n}\n\nconst EACH = 0;\nconst IF = 1;\nconst SIMPLE = 2;\nconst TAG = 3;\nconst SLOT = 4;\nvar bindingTypes = {\n  EACH,\n  IF,\n  SIMPLE,\n  TAG,\n  SLOT\n};\nconst ATTRIBUTE = 0;\nconst EVENT = 1;\nconst TEXT = 2;\nconst VALUE = 3;\nvar expressionTypes = {\n  ATTRIBUTE,\n  EVENT,\n  TEXT,\n  VALUE\n};\n/**\n * Create the template meta object in case of <template> fragments\n * @param   {TemplateChunk} componentTemplate - template chunk object\n * @returns {Object} the meta property that will be passed to the mount function of the TemplateChunk\n */\n\nfunction createTemplateMeta(componentTemplate) {\n  const fragment = componentTemplate.dom.cloneNode(true);\n  return {\n    avoidDOMInjection: true,\n    fragment,\n    children: Array.from(fragment.childNodes)\n  };\n}\n/* get rid of the @ungap/essential-map polyfill */\n\n\nconst {\n  indexOf: iOF\n} = [];\n\nconst append = (get, parent, children, start, end, before) => {\n  const isSelect = 'selectedIndex' in parent;\n  let noSelection = isSelect;\n\n  while (start < end) {\n    const child = get(children[start], 1);\n    parent.insertBefore(child, before);\n\n    if (isSelect && noSelection && child.selected) {\n      noSelection = !noSelection;\n      let {\n        selectedIndex\n      } = parent;\n      parent.selectedIndex = selectedIndex < 0 ? start : iOF.call(parent.querySelectorAll('option'), child);\n    }\n\n    start++;\n  }\n};\n\nconst eqeq = (a, b) => a == b;\n\nconst identity = O => O;\n\nconst indexOf = (moreNodes, moreStart, moreEnd, lessNodes, lessStart, lessEnd, compare) => {\n  const length = lessEnd - lessStart;\n  /* istanbul ignore if */\n\n  if (length < 1) return -1;\n\n  while (moreEnd - moreStart >= length) {\n    let m = moreStart;\n    let l = lessStart;\n\n    while (m < moreEnd && l < lessEnd && compare(moreNodes[m], lessNodes[l])) {\n      m++;\n      l++;\n    }\n\n    if (l === lessEnd) return moreStart;\n    moreStart = m + 1;\n  }\n\n  return -1;\n};\n\nconst isReversed = (futureNodes, futureEnd, currentNodes, currentStart, currentEnd, compare) => {\n  while (currentStart < currentEnd && compare(currentNodes[currentStart], futureNodes[futureEnd - 1])) {\n    currentStart++;\n    futureEnd--;\n  }\n\n  return futureEnd === 0;\n};\n\nconst next = (get, list, i, length, before) => i < length ? get(list[i], 0) : 0 < i ? get(list[i - 1], -0).nextSibling : before;\n\nconst remove = (get, parent, children, start, end) => {\n  while (start < end) removeChild(get(children[start++], -1), parent);\n}; // - - - - - - - - - - - - - - - - - - -\n// diff related constants and utilities\n// - - - - - - - - - - - - - - - - - - -\n\n\nconst DELETION = -1;\nconst INSERTION = 1;\nconst SKIP = 0;\nconst SKIP_OND = 50;\n\nconst HS = (futureNodes, futureStart, futureEnd, futureChanges, currentNodes, currentStart, currentEnd, currentChanges) => {\n  let k = 0;\n  /* istanbul ignore next */\n\n  let minLen = futureChanges < currentChanges ? futureChanges : currentChanges;\n  const link = Array(minLen++);\n  const tresh = Array(minLen);\n  tresh[0] = -1;\n\n  for (let i = 1; i < minLen; i++) tresh[i] = currentEnd;\n\n  const keymap = new Map();\n\n  for (let i = currentStart; i < currentEnd; i++) keymap.set(currentNodes[i], i);\n\n  for (let i = futureStart; i < futureEnd; i++) {\n    const idxInOld = keymap.get(futureNodes[i]);\n\n    if (idxInOld != null) {\n      k = findK(tresh, minLen, idxInOld);\n      /* istanbul ignore else */\n\n      if (-1 < k) {\n        tresh[k] = idxInOld;\n        link[k] = {\n          newi: i,\n          oldi: idxInOld,\n          prev: link[k - 1]\n        };\n      }\n    }\n  }\n\n  k = --minLen;\n  --currentEnd;\n\n  while (tresh[k] > currentEnd) --k;\n\n  minLen = currentChanges + futureChanges - k;\n  const diff = Array(minLen);\n  let ptr = link[k];\n  --futureEnd;\n\n  while (ptr) {\n    const {\n      newi,\n      oldi\n    } = ptr;\n\n    while (futureEnd > newi) {\n      diff[--minLen] = INSERTION;\n      --futureEnd;\n    }\n\n    while (currentEnd > oldi) {\n      diff[--minLen] = DELETION;\n      --currentEnd;\n    }\n\n    diff[--minLen] = SKIP;\n    --futureEnd;\n    --currentEnd;\n    ptr = ptr.prev;\n  }\n\n  while (futureEnd >= futureStart) {\n    diff[--minLen] = INSERTION;\n    --futureEnd;\n  }\n\n  while (currentEnd >= currentStart) {\n    diff[--minLen] = DELETION;\n    --currentEnd;\n  }\n\n  return diff;\n}; // this is pretty much the same petit-dom code without the delete map part\n// https://github.com/yelouafi/petit-dom/blob/bd6f5c919b5ae5297be01612c524c40be45f14a7/src/vdom.js#L556-L561\n\n\nconst OND = (futureNodes, futureStart, rows, currentNodes, currentStart, cols, compare) => {\n  const length = rows + cols;\n  const v = [];\n  let d, k, r, c, pv, cv, pd;\n\n  outer: for (d = 0; d <= length; d++) {\n    /* istanbul ignore if */\n    if (d > SKIP_OND) return null;\n    pd = d - 1;\n    /* istanbul ignore next */\n\n    pv = d ? v[d - 1] : [0, 0];\n    cv = v[d] = [];\n\n    for (k = -d; k <= d; k += 2) {\n      if (k === -d || k !== d && pv[pd + k - 1] < pv[pd + k + 1]) {\n        c = pv[pd + k + 1];\n      } else {\n        c = pv[pd + k - 1] + 1;\n      }\n\n      r = c - k;\n\n      while (c < cols && r < rows && compare(currentNodes[currentStart + c], futureNodes[futureStart + r])) {\n        c++;\n        r++;\n      }\n\n      if (c === cols && r === rows) {\n        break outer;\n      }\n\n      cv[d + k] = c;\n    }\n  }\n\n  const diff = Array(d / 2 + length / 2);\n  let diffIdx = diff.length - 1;\n\n  for (d = v.length - 1; d >= 0; d--) {\n    while (c > 0 && r > 0 && compare(currentNodes[currentStart + c - 1], futureNodes[futureStart + r - 1])) {\n      // diagonal edge = equality\n      diff[diffIdx--] = SKIP;\n      c--;\n      r--;\n    }\n\n    if (!d) break;\n    pd = d - 1;\n    /* istanbul ignore next */\n\n    pv = d ? v[d - 1] : [0, 0];\n    k = c - r;\n\n    if (k === -d || k !== d && pv[pd + k - 1] < pv[pd + k + 1]) {\n      // vertical edge = insertion\n      r--;\n      diff[diffIdx--] = INSERTION;\n    } else {\n      // horizontal edge = deletion\n      c--;\n      diff[diffIdx--] = DELETION;\n    }\n  }\n\n  return diff;\n};\n\nconst applyDiff = (diff, get, parentNode, futureNodes, futureStart, currentNodes, currentStart, currentLength, before) => {\n  const live = new Map();\n  const length = diff.length;\n  let currentIndex = currentStart;\n  let i = 0;\n\n  while (i < length) {\n    switch (diff[i++]) {\n      case SKIP:\n        futureStart++;\n        currentIndex++;\n        break;\n\n      case INSERTION:\n        // TODO: bulk appends for sequential nodes\n        live.set(futureNodes[futureStart], 1);\n        append(get, parentNode, futureNodes, futureStart++, futureStart, currentIndex < currentLength ? get(currentNodes[currentIndex], 0) : before);\n        break;\n\n      case DELETION:\n        currentIndex++;\n        break;\n    }\n  }\n\n  i = 0;\n\n  while (i < length) {\n    switch (diff[i++]) {\n      case SKIP:\n        currentStart++;\n        break;\n\n      case DELETION:\n        // TODO: bulk removes for sequential nodes\n        if (live.has(currentNodes[currentStart])) currentStart++;else remove(get, parentNode, currentNodes, currentStart++, currentStart);\n        break;\n    }\n  }\n};\n\nconst findK = (ktr, length, j) => {\n  let lo = 1;\n  let hi = length;\n\n  while (lo < hi) {\n    const mid = (lo + hi) / 2 >>> 0;\n    if (j < ktr[mid]) hi = mid;else lo = mid + 1;\n  }\n\n  return lo;\n};\n\nconst smartDiff = (get, parentNode, futureNodes, futureStart, futureEnd, futureChanges, currentNodes, currentStart, currentEnd, currentChanges, currentLength, compare, before) => {\n  applyDiff(OND(futureNodes, futureStart, futureChanges, currentNodes, currentStart, currentChanges, compare) || HS(futureNodes, futureStart, futureEnd, futureChanges, currentNodes, currentStart, currentEnd, currentChanges), get, parentNode, futureNodes, futureStart, currentNodes, currentStart, currentLength, before);\n};\n\nlet removeChild = (child, parentNode) => {\n  /* istanbul ignore if */\n  if ('remove' in child) {\n    removeChild = child => {\n      child.remove();\n    };\n  } else {\n    removeChild = (child, parentNode) => {\n      /* istanbul ignore else */\n      if (child.parentNode === parentNode) parentNode.removeChild(child);\n    };\n  }\n\n  removeChild(child, parentNode);\n};\n/*! (c) 2018 Andrea Giammarchi (ISC) */\n\n\nconst domdiff = (parentNode, // where changes happen\ncurrentNodes, // Array of current items/nodes\nfutureNodes, // Array of future items/nodes\noptions // optional object with one of the following properties\n//  before: domNode\n//  compare(generic, generic) => true if same generic\n//  node(generic) => Node\n) => {\n  if (!options) options = {};\n  const compare = options.compare || eqeq;\n  const get = options.node || identity;\n  const before = options.before == null ? null : get(options.before, 0);\n  const currentLength = currentNodes.length;\n  let currentEnd = currentLength;\n  let currentStart = 0;\n  let futureEnd = futureNodes.length;\n  let futureStart = 0; // common prefix\n\n  while (currentStart < currentEnd && futureStart < futureEnd && compare(currentNodes[currentStart], futureNodes[futureStart])) {\n    currentStart++;\n    futureStart++;\n  } // common suffix\n\n\n  while (currentStart < currentEnd && futureStart < futureEnd && compare(currentNodes[currentEnd - 1], futureNodes[futureEnd - 1])) {\n    currentEnd--;\n    futureEnd--;\n  }\n\n  const currentSame = currentStart === currentEnd;\n  const futureSame = futureStart === futureEnd; // same list\n\n  if (currentSame && futureSame) return futureNodes; // only stuff to add\n\n  if (currentSame && futureStart < futureEnd) {\n    append(get, parentNode, futureNodes, futureStart, futureEnd, next(get, currentNodes, currentStart, currentLength, before));\n    return futureNodes;\n  } // only stuff to remove\n\n\n  if (futureSame && currentStart < currentEnd) {\n    remove(get, parentNode, currentNodes, currentStart, currentEnd);\n    return futureNodes;\n  }\n\n  const currentChanges = currentEnd - currentStart;\n  const futureChanges = futureEnd - futureStart;\n  let i = -1; // 2 simple indels: the shortest sequence is a subsequence of the longest\n\n  if (currentChanges < futureChanges) {\n    i = indexOf(futureNodes, futureStart, futureEnd, currentNodes, currentStart, currentEnd, compare); // inner diff\n\n    if (-1 < i) {\n      append(get, parentNode, futureNodes, futureStart, i, get(currentNodes[currentStart], 0));\n      append(get, parentNode, futureNodes, i + currentChanges, futureEnd, next(get, currentNodes, currentEnd, currentLength, before));\n      return futureNodes;\n    }\n  }\n  /* istanbul ignore else */\n  else if (futureChanges < currentChanges) {\n      i = indexOf(currentNodes, currentStart, currentEnd, futureNodes, futureStart, futureEnd, compare); // outer diff\n\n      if (-1 < i) {\n        remove(get, parentNode, currentNodes, currentStart, i);\n        remove(get, parentNode, currentNodes, i + futureChanges, currentEnd);\n        return futureNodes;\n      }\n    } // common case with one replacement for many nodes\n  // or many nodes replaced for a single one\n\n  /* istanbul ignore else */\n\n\n  if (currentChanges < 2 || futureChanges < 2) {\n    append(get, parentNode, futureNodes, futureStart, futureEnd, get(currentNodes[currentStart], 0));\n    remove(get, parentNode, currentNodes, currentStart, currentEnd);\n    return futureNodes;\n  } // the half match diff part has been skipped in petit-dom\n  // https://github.com/yelouafi/petit-dom/blob/bd6f5c919b5ae5297be01612c524c40be45f14a7/src/vdom.js#L391-L397\n  // accordingly, I think it's safe to skip in here too\n  // if one day it'll come out like the speediest thing ever to do\n  // then I might add it in here too\n  // Extra: before going too fancy, what about reversed lists ?\n  //        This should bail out pretty quickly if that's not the case.\n\n\n  if (currentChanges === futureChanges && isReversed(futureNodes, futureEnd, currentNodes, currentStart, currentEnd, compare)) {\n    append(get, parentNode, futureNodes, futureStart, futureEnd, next(get, currentNodes, currentEnd, currentLength, before));\n    return futureNodes;\n  } // last resort through a smart diff\n\n\n  smartDiff(get, parentNode, futureNodes, futureStart, futureEnd, futureChanges, currentNodes, currentStart, currentEnd, currentChanges, currentLength, compare, before);\n  return futureNodes;\n};\n/**\n * Quick type checking\n * @param   {*} element - anything\n * @param   {string} type - type definition\n * @returns {boolean} true if the type corresponds\n */\n\n\nfunction checkType$1(element, type) {\n  return typeof element === type;\n}\n/**\n * Check if an element is part of an svg\n * @param   {HTMLElement}  el - element to check\n * @returns {boolean} true if we are in an svg context\n */\n\n\nfunction isSvg(el) {\n  const owner = el.ownerSVGElement;\n  return !!owner || owner === null;\n}\n/**\n * Check if an element is a template tag\n * @param   {HTMLElement}  el - element to check\n * @returns {boolean} true if it's a <template>\n */\n\n\nfunction isTemplate(el) {\n  return !isNil(el.content);\n}\n/**\n * Check if a value is a Boolean\n * @param   {*}  value - anything\n * @returns {boolean} true only for the value is a boolean\n */\n\n\nfunction isBoolean(value) {\n  return checkType$1(value, 'boolean');\n}\n/**\n * Check if a value is an Object\n * @param   {*}  value - anything\n * @returns {boolean} true only for the value is an object\n */\n\n\nfunction isObject(value) {\n  return !isNil(value) && checkType$1(value, 'object');\n}\n/**\n * Check if a value is null or undefined\n * @param   {*}  value - anything\n * @returns {boolean} true only for the 'undefined' and 'null' types\n */\n\n\nfunction isNil(value) {\n  return value === null || value === undefined;\n}\n\nconst EachBinding = Object.seal({\n  // dynamic binding properties\n  childrenMap: null,\n  node: null,\n  root: null,\n  condition: null,\n  evaluate: null,\n  template: null,\n  isTemplateTag: false,\n  nodes: [],\n  getKey: null,\n  indexName: null,\n  itemName: null,\n  afterPlaceholder: null,\n  placeholder: null,\n\n  // API methods\n  mount(scope, parentScope) {\n    return this.update(scope, parentScope);\n  },\n\n  update(scope, parentScope) {\n    const {\n      placeholder\n    } = this;\n    const collection = this.evaluate(scope);\n    const items = collection ? Array.from(collection) : [];\n    const parent = placeholder.parentNode; // prepare the diffing\n\n    const {\n      newChildrenMap,\n      batches,\n      futureNodes\n    } = createPatch(items, scope, parentScope, this); // patch the DOM only if there are new nodes\n\n    if (futureNodes.length) {\n      domdiff(parent, this.nodes, futureNodes, {\n        before: placeholder,\n        node: patch(Array.from(this.childrenMap.values()), parentScope)\n      });\n    } else {\n      // remove all redundant templates\n      unmountRedundant(this.childrenMap);\n    } // trigger the mounts and the updates\n\n\n    batches.forEach(fn => fn()); // update the children map\n\n    this.childrenMap = newChildrenMap;\n    this.nodes = futureNodes;\n    return this;\n  },\n\n  unmount(scope, parentScope) {\n    unmountRedundant(this.childrenMap, parentScope);\n    this.childrenMap = new Map();\n    this.nodes = [];\n    return this;\n  }\n\n});\n/**\n * Patch the DOM while diffing\n * @param   {TemplateChunk[]} redundant - redundant tepmplate chunks\n * @param   {*} parentScope - scope of the parent template\n * @returns {Function} patch function used by domdiff\n */\n\nfunction patch(redundant, parentScope) {\n  return (item, info) => {\n    if (info < 0) {\n      const {\n        template,\n        context\n      } = redundant.pop(); // notice that we pass null as last argument because\n      // the root node and its children will be removed by domdiff\n\n      template.unmount(context, parentScope, null);\n    }\n\n    return item;\n  };\n}\n/**\n * Unmount the remaining template instances\n * @param   {Map} childrenMap - map containing the children template to unmount\n * @param   {*} parentScope - scope of the parent template\n * @returns {TemplateChunk[]} collection containing the template chunks unmounted\n */\n\n\nfunction unmountRedundant(childrenMap, parentScope) {\n  return Array.from(childrenMap.values()).map((_ref) => {\n    let {\n      template,\n      context\n    } = _ref;\n    return template.unmount(context, parentScope, true);\n  });\n}\n/**\n * Check whether a template must be filtered from a loop\n * @param   {Function} condition - filter function\n * @param   {Object} context - argument passed to the filter function\n * @returns {boolean} true if this item should be skipped\n */\n\n\nfunction mustFilterItem(condition, context) {\n  return condition ? Boolean(condition(context)) === false : false;\n}\n/**\n * Extend the scope of the looped template\n * @param   {Object} scope - current template scope\n * @param   {string} options.itemName - key to identify the looped item in the new context\n * @param   {string} options.indexName - key to identify the index of the looped item\n * @param   {number} options.index - current index\n * @param   {*} options.item - collection item looped\n * @returns {Object} enhanced scope object\n */\n\n\nfunction extendScope(scope, _ref2) {\n  let {\n    itemName,\n    indexName,\n    index,\n    item\n  } = _ref2;\n  scope[itemName] = item;\n  if (indexName) scope[indexName] = index;\n  return scope;\n}\n/**\n * Loop the current template items\n * @param   {Array} items - expression collection value\n * @param   {*} scope - template scope\n * @param   {*} parentScope - scope of the parent template\n * @param   {EeachBinding} binding - each binding object instance\n * @returns {Object} data\n * @returns {Map} data.newChildrenMap - a Map containing the new children template structure\n * @returns {Array} data.batches - array containing the template lifecycle functions to trigger\n * @returns {Array} data.futureNodes - array containing the nodes we need to diff\n */\n\n\nfunction createPatch(items, scope, parentScope, binding) {\n  const {\n    condition,\n    template,\n    childrenMap,\n    itemName,\n    getKey,\n    indexName,\n    root,\n    isTemplateTag\n  } = binding;\n  const newChildrenMap = new Map();\n  const batches = [];\n  const futureNodes = [];\n  items.forEach((item, index) => {\n    const context = extendScope(Object.create(scope), {\n      itemName,\n      indexName,\n      index,\n      item\n    });\n    const key = getKey ? getKey(context) : index;\n    const oldItem = childrenMap.get(key);\n\n    if (mustFilterItem(condition, context)) {\n      return;\n    }\n\n    const componentTemplate = oldItem ? oldItem.template : template.clone();\n    const el = oldItem ? componentTemplate.el : root.cloneNode();\n    const mustMount = !oldItem;\n    const meta = isTemplateTag && mustMount ? createTemplateMeta(componentTemplate) : {};\n\n    if (mustMount) {\n      batches.push(() => componentTemplate.mount(el, context, parentScope, meta));\n    } else {\n      componentTemplate.update(context, parentScope);\n    } // create the collection of nodes to update or to add\n    // in case of template tags we need to add all its children nodes\n\n\n    if (isTemplateTag) {\n      futureNodes.push(...(meta.children || componentTemplate.children));\n    } else {\n      futureNodes.push(el);\n    } // delete the old item from the children map\n\n\n    childrenMap.delete(key); // update the children map\n\n    newChildrenMap.set(key, {\n      template: componentTemplate,\n      context,\n      index\n    });\n  });\n  return {\n    newChildrenMap,\n    batches,\n    futureNodes\n  };\n}\n\nfunction create(node, _ref3) {\n  let {\n    evaluate,\n    condition,\n    itemName,\n    indexName,\n    getKey,\n    template\n  } = _ref3;\n  const placeholder = document.createTextNode('');\n  const parent = node.parentNode;\n  const root = node.cloneNode();\n  parent.insertBefore(placeholder, node);\n  parent.removeChild(node);\n  return Object.assign({}, EachBinding, {\n    childrenMap: new Map(),\n    node,\n    root,\n    condition,\n    evaluate,\n    isTemplateTag: isTemplate(root),\n    template: template.createDOM(node),\n    getKey,\n    indexName,\n    itemName,\n    placeholder\n  });\n}\n/**\n * Binding responsible for the `if` directive\n */\n\n\nconst IfBinding = Object.seal({\n  // dynamic binding properties\n  node: null,\n  evaluate: null,\n  parent: null,\n  isTemplateTag: false,\n  placeholder: null,\n  template: null,\n\n  // API methods\n  mount(scope, parentScope) {\n    this.parent.insertBefore(this.placeholder, this.node);\n    this.parent.removeChild(this.node);\n    return this.update(scope, parentScope);\n  },\n\n  update(scope, parentScope) {\n    const value = !!this.evaluate(scope);\n    const mustMount = !this.value && value;\n    const mustUnmount = this.value && !value;\n\n    const mount = () => {\n      const pristine = this.node.cloneNode();\n      this.parent.insertBefore(pristine, this.placeholder);\n      this.template = this.template.clone();\n      this.template.mount(pristine, scope, parentScope);\n    };\n\n    switch (true) {\n      case mustMount:\n        mount();\n        break;\n\n      case mustUnmount:\n        this.unmount(scope);\n        break;\n\n      default:\n        if (value) this.template.update(scope, parentScope);\n    }\n\n    this.value = value;\n    return this;\n  },\n\n  unmount(scope, parentScope) {\n    this.template.unmount(scope, parentScope, true);\n    return this;\n  }\n\n});\n\nfunction create$1(node, _ref4) {\n  let {\n    evaluate,\n    template\n  } = _ref4;\n  return Object.assign({}, IfBinding, {\n    node,\n    evaluate,\n    parent: node.parentNode,\n    placeholder: document.createTextNode(''),\n    template: template.createDOM(node)\n  });\n}\n\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nconst SET_ATTIBUTE = 'setAttribute';\n/**\n * Add all the attributes provided\n * @param   {HTMLElement} node - target node\n * @param   {Object} attributes - object containing the attributes names and values\n * @returns {undefined} sorry it's a void function :(\n */\n\nfunction setAllAttributes(node, attributes) {\n  Object.entries(attributes).forEach((_ref5) => {\n    let [name, value] = _ref5;\n    return attributeExpression(node, {\n      name\n    }, value);\n  });\n}\n/**\n * Remove all the attributes provided\n * @param   {HTMLElement} node - target node\n * @param   {Object} attributes - object containing all the attribute names\n * @returns {undefined} sorry it's a void function :(\n */\n\n\nfunction removeAllAttributes(node, attributes) {\n  Object.keys(attributes).forEach(attribute => node.removeAttribute(attribute));\n}\n/**\n * This methods handles the DOM attributes updates\n * @param   {HTMLElement} node - target node\n * @param   {Object} expression - expression object\n * @param   {string} expression.name - attribute name\n * @param   {*} value - new expression value\n * @param   {*} oldValue - the old expression cached value\n * @returns {undefined}\n */\n\n\nfunction attributeExpression(node, _ref6, value, oldValue) {\n  let {\n    name\n  } = _ref6;\n\n  // is it a spread operator? {...attributes}\n  if (!name) {\n    // is the value still truthy?\n    if (value) {\n      setAllAttributes(node, value);\n    } else if (oldValue) {\n      // otherwise remove all the old attributes\n      removeAllAttributes(node, oldValue);\n    }\n\n    return;\n  } // handle boolean attributes\n\n\n  if (isBoolean(value) || isObject(value)) {\n    node[name] = value;\n  }\n\n  node[getMethod(value)](name, normalizeValue(name, value));\n}\n/**\n * Get the attribute modifier method\n * @param   {*} value - if truthy we return `setAttribute` othewise `removeAttribute`\n * @returns {string} the node attribute modifier method name\n */\n\n\nfunction getMethod(value) {\n  return isNil(value) || value === false || value === '' || isObject(value) ? REMOVE_ATTRIBUTE : SET_ATTIBUTE;\n}\n/**\n * Get the value as string\n * @param   {string} name - attribute name\n * @param   {*} value - user input value\n * @returns {string} input value as string\n */\n\n\nfunction normalizeValue(name, value) {\n  // be sure that expressions like selected={ true } will be always rendered as selected='selected'\n  if (value === true) return name;\n  return value;\n}\n\nconst RE_EVENTS_PREFIX = /^on/;\n/**\n * Set a new event listener\n * @param   {HTMLElement} node - target node\n * @param   {Object} expression - expression object\n * @param   {string} expression.name - event name\n * @param   {*} value - new expression value\n * @param   {*} oldValue - old expression value\n * @returns {value} the callback just received\n */\n\nfunction eventExpression(node, _ref7, value, oldValue) {\n  let {\n    name\n  } = _ref7;\n  const normalizedEventName = name.replace(RE_EVENTS_PREFIX, '');\n\n  if (oldValue) {\n    node.removeEventListener(normalizedEventName, oldValue);\n  }\n\n  if (value) {\n    node.addEventListener(normalizedEventName, value, false);\n  }\n\n  return value;\n}\n/**\n * This methods handles a simple text expression update\n * @param   {HTMLElement} node - target node\n * @param   {Object} expression - expression object\n * @param   {number} expression.childNodeIndex - index to find the text node to update\n * @param   {*} value - new expression value\n * @returns {undefined}\n */\n\n\nfunction textExpression(node, _ref8, value) {\n  let {\n    childNodeIndex\n  } = _ref8;\n  const target = node.childNodes[childNodeIndex];\n  const val = normalizeValue$1(value); // replace the target if it's a placeholder comment\n\n  if (target.nodeType === Node.COMMENT_NODE) {\n    const textNode = document.createTextNode(val);\n    node.replaceChild(textNode, target);\n  } else {\n    target.data = normalizeValue$1(val);\n  }\n}\n/**\n * Normalize the user value in order to render a empty string in case of falsy values\n * @param   {*} value - user input value\n * @returns {string} hopefully a string\n */\n\n\nfunction normalizeValue$1(value) {\n  return isNil(value) ? '' : value;\n}\n/**\n * This methods handles the input fileds value updates\n * @param   {HTMLElement} node - target node\n * @param   {Object} expression - expression object\n * @param   {*} value - new expression value\n * @returns {undefined}\n */\n\n\nfunction valueExpression(node, expression, value) {\n  node.value = value;\n}\n\nvar expressions = {\n  [ATTRIBUTE]: attributeExpression,\n  [EVENT]: eventExpression,\n  [TEXT]: textExpression,\n  [VALUE]: valueExpression\n};\nconst Expression = Object.seal({\n  // Static props\n  node: null,\n  value: null,\n\n  // API methods\n\n  /**\n   * Mount the expression evaluating its initial value\n   * @param   {*} scope - argument passed to the expression to evaluate its current values\n   * @returns {Expression} self\n   */\n  mount(scope) {\n    // hopefully a pure function\n    this.value = this.evaluate(scope); // IO() DOM updates\n\n    apply(this, this.value);\n    return this;\n  },\n\n  /**\n   * Update the expression if its value changed\n   * @param   {*} scope - argument passed to the expression to evaluate its current values\n   * @returns {Expression} self\n   */\n  update(scope) {\n    // pure function\n    const value = this.evaluate(scope);\n\n    if (this.value !== value) {\n      // IO() DOM updates\n      apply(this, value);\n      this.value = value;\n    }\n\n    return this;\n  },\n\n  /**\n   * Expression teardown method\n   * @returns {Expression} self\n   */\n  unmount() {\n    // unmount only the event handling expressions\n    if (this.type === EVENT) apply(this, null);\n    return this;\n  }\n\n});\n/**\n * IO() function to handle the DOM updates\n * @param {Expression} expression - expression object\n * @param {*} value - current expression value\n * @returns {undefined}\n */\n\nfunction apply(expression, value) {\n  return expressions[expression.type](expression.node, expression, value, expression.value);\n}\n\nfunction create$2(node, data) {\n  return Object.assign({}, Expression, {}, data, {\n    node\n  });\n}\n/**\n * Create a flat object having as keys a list of methods that if dispatched will propagate\n * on the whole collection\n * @param   {Array} collection - collection to iterate\n * @param   {Array<string>} methods - methods to execute on each item of the collection\n * @param   {*} context - context returned by the new methods created\n * @returns {Object} a new object to simplify the the nested methods dispatching\n */\n\n\nfunction flattenCollectionMethods(collection, methods, context) {\n  return methods.reduce((acc, method) => {\n    return Object.assign({}, acc, {\n      [method]: scope => {\n        return collection.map(item => item[method](scope)) && context;\n      }\n    });\n  }, {});\n}\n\nfunction create$3(node, _ref9) {\n  let {\n    expressions\n  } = _ref9;\n  return Object.assign({}, flattenCollectionMethods(expressions.map(expression => create$2(node, expression)), ['mount', 'update', 'unmount']));\n}\n/**\n * Evaluate a list of attribute expressions\n * @param   {Array} attributes - attribute expressions generated by the riot compiler\n * @returns {Object} key value pairs with the result of the computation\n */\n\n\nfunction evaluateAttributeExpressions(attributes) {\n  return attributes.reduce((acc, attribute) => {\n    const {\n      value,\n      type\n    } = attribute;\n\n    switch (true) {\n      // spread attribute\n      case !attribute.name && type === ATTRIBUTE:\n        return Object.assign({}, acc, {}, value);\n      // value attribute\n\n      case type === VALUE:\n        acc.value = attribute.value;\n        break;\n      // normal attributes\n\n      default:\n        acc[dashToCamelCase(attribute.name)] = attribute.value;\n    }\n\n    return acc;\n  }, {});\n}\n\nfunction extendParentScope(attributes, scope, parentScope) {\n  if (!attributes || !attributes.length) return parentScope;\n  const expressions = attributes.map(attr => Object.assign({}, attr, {\n    value: attr.evaluate(scope)\n  }));\n  return Object.assign(Object.create(parentScope || null), evaluateAttributeExpressions(expressions));\n}\n\nconst SlotBinding = Object.seal({\n  // dynamic binding properties\n  node: null,\n  name: null,\n  attributes: [],\n  template: null,\n  cachedParentScope: null,\n\n  getTemplateScope(scope, parentScope) {\n    // cache the parent scope to avoid this issue https://github.com/riot/riot/issues/2762\n    this.cachedParentScope = parentScope || this.cachedParentScope;\n    return extendParentScope(this.attributes, scope, this.cachedParentScope);\n  },\n\n  // API methods\n  mount(scope, parentScope) {\n    const templateData = scope.slots ? scope.slots.find((_ref10) => {\n      let {\n        id\n      } = _ref10;\n      return id === this.name;\n    }) : false;\n    const {\n      parentNode\n    } = this.node;\n    this.template = templateData && create$6(templateData.html, templateData.bindings).createDOM(parentNode);\n\n    if (this.template) {\n      this.template.mount(this.node, this.getTemplateScope(scope, parentScope));\n      this.template.children = moveSlotInnerContent(this.node);\n    }\n\n    parentNode.removeChild(this.node);\n    return this;\n  },\n\n  update(scope, parentScope) {\n    if (this.template) {\n      this.template.update(this.getTemplateScope(scope, parentScope));\n    }\n\n    return this;\n  },\n\n  unmount(scope, parentScope, mustRemoveRoot) {\n    if (this.template) {\n      this.template.unmount(this.getTemplateScope(scope, parentScope), null, mustRemoveRoot);\n    }\n\n    return this;\n  }\n\n});\n/**\n * Move the inner content of the slots outside of them\n * @param   {HTMLNode} slot - slot node\n * @param   {HTMLElement} children - array to fill with the child nodes detected\n * @returns {HTMLElement[]} list of the node moved\n */\n\nfunction moveSlotInnerContent(slot, children) {\n  if (children === void 0) {\n    children = [];\n  }\n\n  const child = slot.firstChild;\n\n  if (child) {\n    slot.parentNode.insertBefore(child, slot);\n    return [child, ...moveSlotInnerContent(slot)];\n  }\n\n  return children;\n}\n/**\n * Create a single slot binding\n * @param   {HTMLElement} node - slot node\n * @param   {string} options.name - slot id\n * @returns {Object} Slot binding object\n */\n\n\nfunction createSlot(node, _ref11) {\n  let {\n    name,\n    attributes\n  } = _ref11;\n  return Object.assign({}, SlotBinding, {\n    attributes,\n    node,\n    name\n  });\n}\n/**\n * Create a new tag object if it was registered before, otherwise fallback to the simple\n * template chunk\n * @param   {Function} component - component factory function\n * @param   {Array<Object>} slots - array containing the slots markup\n * @param   {Array} attributes - dynamic attributes that will be received by the tag element\n * @returns {TagImplementation|TemplateChunk} a tag implementation or a template chunk as fallback\n */\n\n\nfunction getTag(component, slots, attributes) {\n  if (slots === void 0) {\n    slots = [];\n  }\n\n  if (attributes === void 0) {\n    attributes = [];\n  }\n\n  // if this tag was registered before we will return its implementation\n  if (component) {\n    return component({\n      slots,\n      attributes\n    });\n  } // otherwise we return a template chunk\n\n\n  return create$6(slotsToMarkup(slots), [...slotBindings(slots), {\n    // the attributes should be registered as binding\n    // if we fallback to a normal template chunk\n    expressions: attributes.map(attr => {\n      return Object.assign({\n        type: ATTRIBUTE\n      }, attr);\n    })\n  }]);\n}\n/**\n * Merge all the slots bindings into a single array\n * @param   {Array<Object>} slots - slots collection\n * @returns {Array<Bindings>} flatten bindings array\n */\n\n\nfunction slotBindings(slots) {\n  return slots.reduce((acc, _ref12) => {\n    let {\n      bindings\n    } = _ref12;\n    return acc.concat(bindings);\n  }, []);\n}\n/**\n * Merge all the slots together in a single markup string\n * @param   {Array<Object>} slots - slots collection\n * @returns {string} markup of all the slots in a single string\n */\n\n\nfunction slotsToMarkup(slots) {\n  return slots.reduce((acc, slot) => {\n    return acc + slot.html;\n  }, '');\n}\n\nconst TagBinding = Object.seal({\n  // dynamic binding properties\n  node: null,\n  evaluate: null,\n  name: null,\n  slots: null,\n  tag: null,\n  attributes: null,\n  getComponent: null,\n\n  mount(scope) {\n    return this.update(scope);\n  },\n\n  update(scope, parentScope) {\n    const name = this.evaluate(scope); // simple update\n\n    if (name === this.name) {\n      this.tag.update(scope);\n    } else {\n      // unmount the old tag if it exists\n      this.unmount(scope, parentScope, true); // mount the new tag\n\n      this.name = name;\n      this.tag = getTag(this.getComponent(name), this.slots, this.attributes);\n      this.tag.mount(this.node, scope);\n    }\n\n    return this;\n  },\n\n  unmount(scope, parentScope, keepRootTag) {\n    if (this.tag) {\n      // keep the root tag\n      this.tag.unmount(keepRootTag);\n    }\n\n    return this;\n  }\n\n});\n\nfunction create$4(node, _ref13) {\n  let {\n    evaluate,\n    getComponent,\n    slots,\n    attributes\n  } = _ref13;\n  return Object.assign({}, TagBinding, {\n    node,\n    evaluate,\n    slots,\n    attributes,\n    getComponent\n  });\n}\n\nvar bindings = {\n  [IF]: create$1,\n  [SIMPLE]: create$3,\n  [EACH]: create,\n  [TAG]: create$4,\n  [SLOT]: createSlot\n};\n/**\n * Text expressions in a template tag will get childNodeIndex value normalized\n * depending on the position of the <template> tag offset\n * @param   {Expression[]} expressions - riot expressions array\n * @param   {number} textExpressionsOffset - offset of the <template> tag\n * @returns {Expression[]} expressions containing the text expressions normalized\n */\n\nfunction fixTextExpressionsOffset(expressions, textExpressionsOffset) {\n  return expressions.map(e => e.type === TEXT ? Object.assign({}, e, {\n    childNodeIndex: e.childNodeIndex + textExpressionsOffset\n  }) : e);\n}\n/**\n * Bind a new expression object to a DOM node\n * @param   {HTMLElement} root - DOM node where to bind the expression\n * @param   {Object} binding - binding data\n * @param   {number|null} templateTagOffset - if it's defined we need to fix the text expressions childNodeIndex offset\n * @returns {Expression} Expression object\n */\n\n\nfunction create$5(root, binding, templateTagOffset) {\n  const {\n    selector,\n    type,\n    redundantAttribute,\n    expressions\n  } = binding; // find the node to apply the bindings\n\n  const node = selector ? root.querySelector(selector) : root; // remove eventually additional attributes created only to select this node\n\n  if (redundantAttribute) node.removeAttribute(redundantAttribute);\n  const bindingExpressions = expressions || []; // init the binding\n\n  return (bindings[type] || bindings[SIMPLE])(node, Object.assign({}, binding, {\n    expressions: templateTagOffset && !selector ? fixTextExpressionsOffset(bindingExpressions, templateTagOffset) : bindingExpressions\n  }));\n} // in this case a simple innerHTML is enough\n\n\nfunction createHTMLTree(html, root) {\n  const template = isTemplate(root) ? root : document.createElement('template');\n  template.innerHTML = html;\n  return template.content;\n} // for svg nodes we need a bit more work\n\n\nfunction createSVGTree(html, container) {\n  // create the SVGNode\n  const svgNode = container.ownerDocument.importNode(new window.DOMParser().parseFromString(`<svg xmlns=\"http://www.w3.org/2000/svg\">${html}</svg>`, 'application/xml').documentElement, true);\n  return svgNode;\n}\n/**\n * Create the DOM that will be injected\n * @param {Object} root - DOM node to find out the context where the fragment will be created\n * @param   {string} html - DOM to create as string\n * @returns {HTMLDocumentFragment|HTMLElement} a new html fragment\n */\n\n\nfunction createDOMTree(root, html) {\n  if (isSvg(root)) return createSVGTree(html, root);\n  return createHTMLTree(html, root);\n}\n/**\n * Inject the DOM tree into a target node\n * @param   {HTMLElement} el - target element\n * @param   {HTMLFragment|SVGElement} dom - dom tree to inject\n * @returns {undefined}\n */\n\n\nfunction injectDOM(el, dom) {\n  switch (true) {\n    case isSvg(el):\n      moveChildren(dom, el);\n      break;\n\n    case isTemplate(el):\n      el.parentNode.replaceChild(dom, el);\n      break;\n\n    default:\n      el.appendChild(dom);\n  }\n}\n/**\n * Create the Template DOM skeleton\n * @param   {HTMLElement} el - root node where the DOM will be injected\n * @param   {string} html - markup that will be injected into the root node\n * @returns {HTMLFragment} fragment that will be injected into the root node\n */\n\n\nfunction createTemplateDOM(el, html) {\n  return html && (typeof html === 'string' ? createDOMTree(el, html) : html);\n}\n/**\n * Template Chunk model\n * @type {Object}\n */\n\n\nconst TemplateChunk = Object.freeze({\n  // Static props\n  bindings: null,\n  bindingsData: null,\n  html: null,\n  isTemplateTag: false,\n  fragment: null,\n  children: null,\n  dom: null,\n  el: null,\n\n  /**\n   * Create the template DOM structure that will be cloned on each mount\n   * @param   {HTMLElement} el - the root node\n   * @returns {TemplateChunk} self\n   */\n  createDOM(el) {\n    // make sure that the DOM gets created before cloning the template\n    this.dom = this.dom || createTemplateDOM(el, this.html);\n    return this;\n  },\n\n  // API methods\n\n  /**\n   * Attach the template to a DOM node\n   * @param   {HTMLElement} el - target DOM node\n   * @param   {*} scope - template data\n   * @param   {*} parentScope - scope of the parent template tag\n   * @param   {Object} meta - meta properties needed to handle the <template> tags in loops\n   * @returns {TemplateChunk} self\n   */\n  mount(el, scope, parentScope, meta) {\n    if (meta === void 0) {\n      meta = {};\n    }\n\n    if (!el) throw new Error('Please provide DOM node to mount properly your template');\n    if (this.el) this.unmount(scope); // <template> tags require a bit more work\n    // the template fragment might be already created via meta outside of this call\n\n    const {\n      fragment,\n      children,\n      avoidDOMInjection\n    } = meta; // <template> bindings of course can not have a root element\n    // so we check the parent node to set the query selector bindings\n\n    const {\n      parentNode\n    } = children ? children[0] : el;\n    const isTemplateTag = isTemplate(el);\n    const templateTagOffset = isTemplateTag ? Math.max(Array.from(parentNode.children).indexOf(el), 0) : null;\n    this.isTemplateTag = isTemplateTag; // create the DOM if it wasn't created before\n\n    this.createDOM(el);\n\n    if (this.dom) {\n      // create the new template dom fragment if it want already passed in via meta\n      this.fragment = fragment || this.dom.cloneNode(true);\n    } // store root node\n    // notice that for template tags the root note will be the parent tag\n\n\n    this.el = this.isTemplateTag ? parentNode : el; // create the children array only for the <template> fragments\n\n    this.children = this.isTemplateTag ? children || Array.from(this.fragment.childNodes) : null; // inject the DOM into the el only if a fragment is available\n\n    if (!avoidDOMInjection && this.fragment) injectDOM(el, this.fragment); // create the bindings\n\n    this.bindings = this.bindingsData.map(binding => create$5(this.el, binding, templateTagOffset));\n    this.bindings.forEach(b => b.mount(scope, parentScope));\n    return this;\n  },\n\n  /**\n   * Update the template with fresh data\n   * @param   {*} scope - template data\n   * @param   {*} parentScope - scope of the parent template tag\n   * @returns {TemplateChunk} self\n   */\n  update(scope, parentScope) {\n    this.bindings.forEach(b => b.update(scope, parentScope));\n    return this;\n  },\n\n  /**\n   * Remove the template from the node where it was initially mounted\n   * @param   {*} scope - template data\n   * @param   {*} parentScope - scope of the parent template tag\n   * @param   {boolean|null} mustRemoveRoot - if true remove the root element,\n   * if false or undefined clean the root tag content, if null don't touch the DOM\n   * @returns {TemplateChunk} self\n   */\n  unmount(scope, parentScope, mustRemoveRoot) {\n    if (this.el) {\n      this.bindings.forEach(b => b.unmount(scope, parentScope, mustRemoveRoot));\n\n      switch (true) {\n        // <template> tags should be treated a bit differently\n        // we need to clear their children only if it's explicitly required by the caller\n        // via mustRemoveRoot !== null\n        case this.children && mustRemoveRoot !== null:\n          clearChildren(this.children);\n          break;\n        // remove the root node only if the mustRemoveRoot === true\n\n        case mustRemoveRoot === true && this.el.parentNode !== null:\n          this.el.parentNode.removeChild(this.el);\n          break;\n        // otherwise we clean the node children\n\n        case mustRemoveRoot !== null:\n          cleanNode(this.el);\n          break;\n      }\n\n      this.el = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * Clone the template chunk\n   * @returns {TemplateChunk} a clone of this object resetting the this.el property\n   */\n  clone() {\n    return Object.assign({}, this, {\n      el: null\n    });\n  }\n\n});\n/**\n * Create a template chunk wiring also the bindings\n * @param   {string|HTMLElement} html - template string\n * @param   {Array} bindings - bindings collection\n * @returns {TemplateChunk} a new TemplateChunk copy\n */\n\nfunction create$6(html, bindings) {\n  if (bindings === void 0) {\n    bindings = [];\n  }\n\n  return Object.assign({}, TemplateChunk, {\n    html,\n    bindingsData: bindings\n  });\n}\n\n/**\n * Helper function to set an immutable property\n * @param   {Object} source - object where the new property will be set\n * @param   {string} key - object key where the new property will be stored\n * @param   {*} value - value of the new property\n * @param   {Object} options - set the propery overriding the default options\n * @returns {Object} - the original object modified\n */\nfunction defineProperty(source, key, value, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  /* eslint-disable fp/no-mutating-methods */\n  Object.defineProperty(source, key, Object.assign({\n    value,\n    enumerable: false,\n    writable: false,\n    configurable: true\n  }, options));\n  /* eslint-enable fp/no-mutating-methods */\n\n  return source;\n}\n/**\n * Define multiple properties on a target object\n * @param   {Object} source - object where the new properties will be set\n * @param   {Object} properties - object containing as key pair the key + value properties\n * @param   {Object} options - set the propery overriding the default options\n * @returns {Object} the original object modified\n */\n\nfunction defineProperties(source, properties, options) {\n  Object.entries(properties).forEach((_ref) => {\n    let [key, value] = _ref;\n    defineProperty(source, key, value, options);\n  });\n  return source;\n}\n/**\n * Define default properties if they don't exist on the source object\n * @param   {Object} source - object that will receive the default properties\n * @param   {Object} defaults - object containing additional optional keys\n * @returns {Object} the original object received enhanced\n */\n\nfunction defineDefaults(source, defaults) {\n  Object.entries(defaults).forEach((_ref2) => {\n    let [key, value] = _ref2;\n    if (!source[key]) source[key] = value;\n  });\n  return source;\n}\n\nconst ATTRIBUTE$1 = 0;\nconst VALUE$1 = 3;\n\n/**\n * Convert a string from camel case to dash-case\n * @param   {string} string - probably a component tag name\n * @returns {string} component name normalized\n */\nfunction camelToDashCase(string) {\n  return string.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n/**\n * Convert a string containing dashes to camel case\n * @param   {string} string - input string\n * @returns {string} my-string -> myString\n */\n\nfunction dashToCamelCase$1(string) {\n  return string.replace(/-(\\w)/g, (_, c) => c.toUpperCase());\n}\n\n/**\n * Throw an error with a descriptive message\n * @param   { string } message - error message\n * @returns { undefined } hoppla.. at this point the program should stop working\n */\n\nfunction panic(message) {\n  throw new Error(message);\n}\n/**\n * Evaluate a list of attribute expressions\n * @param   {Array} attributes - attribute expressions generated by the riot compiler\n * @returns {Object} key value pairs with the result of the computation\n */\n\nfunction evaluateAttributeExpressions$1(attributes) {\n  return attributes.reduce((acc, attribute) => {\n    const {\n      value,\n      type\n    } = attribute;\n\n    switch (true) {\n      // spread attribute\n      case !attribute.name && type === ATTRIBUTE$1:\n        return Object.assign({}, acc, {}, value);\n      // value attribute\n\n      case type === VALUE$1:\n        acc.value = attribute.value;\n        break;\n      // normal attributes\n\n      default:\n        acc[dashToCamelCase$1(attribute.name)] = attribute.value;\n    }\n\n    return acc;\n  }, {});\n}\n\n/**\n * Converts any DOM node/s to a loopable array\n * @param   { HTMLElement|NodeList } els - single html element or a node list\n * @returns { Array } always a loopable object\n */\nfunction domToArray(els) {\n  // can this object be already looped?\n  if (!Array.isArray(els)) {\n    // is it a node list?\n    if (/^\\[object (HTMLCollection|NodeList|Object)\\]$/.test(Object.prototype.toString.call(els)) && typeof els.length === 'number') return Array.from(els);else // if it's a single node\n      // it will be returned as \"array\" with one single entry\n      return [els];\n  } // this object could be looped out of the box\n\n\n  return els;\n}\n\n/**\n * Simple helper to find DOM nodes returning them as array like loopable object\n * @param   { string|DOMNodeList } selector - either the query or the DOM nodes to arraify\n * @param   { HTMLElement }        ctx      - context defining where the query will search for the DOM nodes\n * @returns { Array } DOM nodes found as array\n */\n\nfunction $(selector, ctx) {\n  return domToArray(typeof selector === 'string' ? (ctx || document).querySelectorAll(selector) : selector);\n}\n\n/**\n * Get all the element attributes as object\n * @param   {HTMLElement} element - DOM node we want to parse\n * @returns {Object} all the attributes found as a key value pairs\n */\n\nfunction DOMattributesToObject(element) {\n  return Array.from(element.attributes).reduce((acc, attribute) => {\n    acc[dashToCamelCase$1(attribute.name)] = attribute.value;\n    return acc;\n  }, {});\n}\n\n/**\n * Normalize the return values, in case of a single value we avoid to return an array\n * @param   { Array } values - list of values we want to return\n * @returns { Array|string|boolean } either the whole list of values or the single one found\n * @private\n */\n\nconst normalize = values => values.length === 1 ? values[0] : values;\n/**\n * Parse all the nodes received to get/remove/check their attributes\n * @param   { HTMLElement|NodeList|Array } els    - DOM node/s to parse\n * @param   { string|Array }               name   - name or list of attributes\n * @param   { string }                     method - method that will be used to parse the attributes\n * @returns { Array|string } result of the parsing in a list or a single value\n * @private\n */\n\n\nfunction parseNodes(els, name, method) {\n  const names = typeof name === 'string' ? [name] : name;\n  return normalize(domToArray(els).map(el => {\n    return normalize(names.map(n => el[method](n)));\n  }));\n}\n/**\n * Set any attribute on a single or a list of DOM nodes\n * @param   { HTMLElement|NodeList|Array } els   - DOM node/s to parse\n * @param   { string|Object }              name  - either the name of the attribute to set\n *                                                 or a list of properties as object key - value\n * @param   { string }                     value - the new value of the attribute (optional)\n * @returns { HTMLElement|NodeList|Array } the original array of elements passed to this function\n *\n * @example\n *\n * import { set } from 'bianco.attr'\n *\n * const img = document.createElement('img')\n *\n * set(img, 'width', 100)\n *\n * // or also\n * set(img, {\n *   width: 300,\n *   height: 300\n * })\n *\n */\n\n\nfunction set(els, name, value) {\n  const attrs = typeof name === 'object' ? name : {\n    [name]: value\n  };\n  const props = Object.keys(attrs);\n  domToArray(els).forEach(el => {\n    props.forEach(prop => el.setAttribute(prop, attrs[prop]));\n  });\n  return els;\n}\n/**\n * Get any attribute from a single or a list of DOM nodes\n * @param   { HTMLElement|NodeList|Array } els   - DOM node/s to parse\n * @param   { string|Array }               name  - name or list of attributes to get\n * @returns { Array|string } list of the attributes found\n *\n * @example\n *\n * import { get } from 'bianco.attr'\n *\n * const img = document.createElement('img')\n *\n * get(img, 'width') // => '200'\n *\n * // or also\n * get(img, ['width', 'height']) // => ['200', '300']\n *\n * // or also\n * get([img1, img2], ['width', 'height']) // => [['200', '300'], ['500', '200']]\n */\n\nfunction get(els, name) {\n  return parseNodes(els, name, 'getAttribute');\n}\n\nconst CSS_BY_NAME = new Map();\nconst STYLE_NODE_SELECTOR = 'style[riot]'; // memoized curried function\n\nconst getStyleNode = (style => {\n  return () => {\n    // lazy evaluation:\n    // if this function was already called before\n    // we return its cached result\n    if (style) return style; // create a new style element or use an existing one\n    // and cache it internally\n\n    style = $(STYLE_NODE_SELECTOR)[0] || document.createElement('style');\n    set(style, 'type', 'text/css');\n    /* istanbul ignore next */\n\n    if (!style.parentNode) document.head.appendChild(style);\n    return style;\n  };\n})();\n/**\n * Object that will be used to inject and manage the css of every tag instance\n */\n\n\nvar cssManager = {\n  CSS_BY_NAME,\n\n  /**\n   * Save a tag style to be later injected into DOM\n   * @param { string } name - if it's passed we will map the css to a tagname\n   * @param { string } css - css string\n   * @returns {Object} self\n   */\n  add(name, css) {\n    if (!CSS_BY_NAME.has(name)) {\n      CSS_BY_NAME.set(name, css);\n      this.inject();\n    }\n\n    return this;\n  },\n\n  /**\n   * Inject all previously saved tag styles into DOM\n   * innerHTML seems slow: http://jsperf.com/riot-insert-style\n   * @returns {Object} self\n   */\n  inject() {\n    getStyleNode().innerHTML = [...CSS_BY_NAME.values()].join('\\n');\n    return this;\n  },\n\n  /**\n   * Remove a tag style from the DOM\n   * @param {string} name a registered tagname\n   * @returns {Object} self\n   */\n  remove(name) {\n    if (CSS_BY_NAME.has(name)) {\n      CSS_BY_NAME.delete(name);\n      this.inject();\n    }\n\n    return this;\n  }\n\n};\n\n/**\n * Function to curry any javascript method\n * @param   {Function}  fn - the target function we want to curry\n * @param   {...[args]} acc - initial arguments\n * @returns {Function|*} it will return a function until the target function\n *                       will receive all of its arguments\n */\nfunction curry(fn) {\n  for (var _len = arguments.length, acc = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    acc[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    args = [...acc, ...args];\n    return args.length < fn.length ? curry(fn, ...args) : fn(...args);\n  };\n}\n\n/**\n * Get the tag name of any DOM node\n * @param   {HTMLElement} element - DOM node we want to inspect\n * @returns {string} name to identify this dom node in riot\n */\n\nfunction getName(element) {\n  return get(element, IS_DIRECTIVE) || element.tagName.toLowerCase();\n}\n\nconst COMPONENT_CORE_HELPERS = Object.freeze({\n  // component helpers\n  $(selector) {\n    return $(selector, this.root)[0];\n  },\n\n  $$(selector) {\n    return $(selector, this.root);\n  }\n\n});\nconst COMPONENT_LIFECYCLE_METHODS = Object.freeze({\n  shouldUpdate: noop,\n  onBeforeMount: noop,\n  onMounted: noop,\n  onBeforeUpdate: noop,\n  onUpdated: noop,\n  onBeforeUnmount: noop,\n  onUnmounted: noop\n});\nconst MOCKED_TEMPLATE_INTERFACE = {\n  update: noop,\n  mount: noop,\n  unmount: noop,\n  clone: noop,\n  createDOM: noop\n};\n/**\n * Factory function to create the component templates only once\n * @param   {Function} template - component template creation function\n * @param   {Object} components - object containing the nested components\n * @returns {TemplateChunk} template chunk object\n */\n\nfunction componentTemplateFactory(template, components) {\n  return template(create$6, expressionTypes, bindingTypes, name => {\n    return components[name] || COMPONENTS_IMPLEMENTATION_MAP.get(name);\n  });\n}\n/**\n * Create the component interface needed for the @riotjs/dom-bindings tag bindings\n * @param   {string} options.css - component css\n * @param   {Function} options.template - functon that will return the dom-bindings template function\n * @param   {Object} options.exports - component interface\n * @param   {string} options.name - component name\n * @returns {Object} component like interface\n */\n\n\nfunction createComponent(_ref) {\n  let {\n    css,\n    template,\n    exports,\n    name\n  } = _ref;\n  const templateFn = template ? componentTemplateFactory(template, exports ? createSubcomponents(exports.components) : {}) : MOCKED_TEMPLATE_INTERFACE;\n  return (_ref2) => {\n    let {\n      slots,\n      attributes,\n      props\n    } = _ref2;\n    const componentAPI = callOrAssign(exports) || {};\n    const component = defineComponent({\n      css,\n      template: templateFn,\n      componentAPI,\n      name\n    })({\n      slots,\n      attributes,\n      props\n    }); // notice that for the components create via tag binding\n    // we need to invert the mount (state/parentScope) arguments\n    // the template bindings will only forward the parentScope updates\n    // and never deal with the component state\n\n    return {\n      mount(element, parentScope, state) {\n        return component.mount(element, state, parentScope);\n      },\n\n      update(parentScope, state) {\n        return component.update(state, parentScope);\n      },\n\n      unmount(preserveRoot) {\n        return component.unmount(preserveRoot);\n      }\n\n    };\n  };\n}\n/**\n * Component definition function\n * @param   {Object} implementation - the componen implementation will be generated via compiler\n * @param   {Object} component - the component initial properties\n * @returns {Object} a new component implementation object\n */\n\nfunction defineComponent(_ref3) {\n  let {\n    css,\n    template,\n    componentAPI,\n    name\n  } = _ref3;\n  // add the component css into the DOM\n  if (css && name) cssManager.add(name, css);\n  return curry(enhanceComponentAPI)(defineProperties( // set the component defaults without overriding the original component API\n  defineDefaults(componentAPI, Object.assign({}, COMPONENT_LIFECYCLE_METHODS, {\n    state: {}\n  })), Object.assign({\n    // defined during the component creation\n    slots: null,\n    root: null\n  }, COMPONENT_CORE_HELPERS, {\n    name,\n    css,\n    template\n  })));\n}\n/**\n * Evaluate the component properties either from its real attributes or from its attribute expressions\n * @param   {HTMLElement} element - component root\n * @param   {Array}  attributeExpressions - attribute values generated via createAttributeBindings\n * @returns {Object} attributes key value pairs\n */\n\nfunction evaluateProps(element, attributeExpressions) {\n  if (attributeExpressions === void 0) {\n    attributeExpressions = [];\n  }\n\n  return Object.assign({}, DOMattributesToObject(element), {}, evaluateAttributeExpressions$1(attributeExpressions));\n}\n/**\n * Create the bindings to update the component attributes\n * @param   {HTMLElement} node - node where we will bind the expressions\n * @param   {Array} attributes - list of attribute bindings\n * @returns {TemplateChunk} - template bindings object\n */\n\n\nfunction createAttributeBindings(node, attributes) {\n  if (attributes === void 0) {\n    attributes = [];\n  }\n\n  const expressions = attributes.map(a => create$2(node, a));\n  const binding = {};\n\n  const updateValues = method => scope => {\n    expressions.forEach(e => e[method](scope));\n    return binding;\n  };\n\n  return Object.assign(binding, {\n    expressions,\n    mount: updateValues('mount'),\n    update: updateValues('update'),\n    unmount: updateValues('unmount')\n  });\n}\n/**\n * Create the subcomponents that can be included inside a tag in runtime\n * @param   {Object} components - components imported in runtime\n * @returns {Object} all the components transformed into Riot.Component factory functions\n */\n\n\nfunction createSubcomponents(components) {\n  if (components === void 0) {\n    components = {};\n  }\n\n  return Object.entries(callOrAssign(components)).reduce((acc, _ref4) => {\n    let [key, value] = _ref4;\n    acc[camelToDashCase(key)] = createComponent(value);\n    return acc;\n  }, {});\n}\n/**\n * Run the component instance through all the plugins set by the user\n * @param   {Object} component - component instance\n * @returns {Object} the component enhanced by the plugins\n */\n\n\nfunction runPlugins(component) {\n  return [...PLUGINS_SET].reduce((c, fn) => fn(c) || c, component);\n}\n/**\n * Compute the component current state merging it with its previous state\n * @param   {Object} oldState - previous state object\n * @param   {Object} newState - new state givent to the `update` call\n * @returns {Object} new object state\n */\n\n\nfunction computeState(oldState, newState) {\n  return Object.assign({}, oldState, {}, callOrAssign(newState));\n}\n/**\n * Add eventually the \"is\" attribute to link this DOM node to its css\n * @param {HTMLElement} element - target root node\n * @param {string} name - name of the component mounted\n * @returns {undefined} it's a void function\n */\n\n\nfunction addCssHook(element, name) {\n  if (getName(element) !== name) {\n    set(element, 'is', name);\n  }\n}\n/**\n * Component creation factory function that will enhance the user provided API\n * @param   {Object} component - a component implementation previously defined\n * @param   {Array} options.slots - component slots generated via riot compiler\n * @param   {Array} options.attributes - attribute expressions generated via riot compiler\n * @returns {Riot.Component} a riot component instance\n */\n\n\nfunction enhanceComponentAPI(component, _ref5) {\n  let {\n    slots,\n    attributes,\n    props\n  } = _ref5;\n  const initialProps = callOrAssign(props);\n  return autobindMethods(runPlugins(defineProperties(Object.create(component), {\n    mount(element, state, parentScope) {\n      if (state === void 0) {\n        state = {};\n      }\n\n      this[ATTRIBUTES_KEY_SYMBOL] = createAttributeBindings(element, attributes).mount(parentScope);\n      this.props = Object.freeze(Object.assign({}, initialProps, {}, evaluateProps(element, this[ATTRIBUTES_KEY_SYMBOL].expressions)));\n      this.state = computeState(this.state, state);\n      this[TEMPLATE_KEY_SYMBOL] = this.template.createDOM(element).clone(); // link this object to the DOM node\n\n      element[DOM_COMPONENT_INSTANCE_PROPERTY] = this; // add eventually the 'is' attribute\n\n      component.name && addCssHook(element, component.name); // define the root element\n\n      defineProperty(this, 'root', element); // define the slots array\n\n      defineProperty(this, 'slots', slots); // before mount lifecycle event\n\n      this.onBeforeMount(this.props, this.state); // mount the template\n\n      this[TEMPLATE_KEY_SYMBOL].mount(element, this, parentScope);\n      this.onMounted(this.props, this.state);\n      return this;\n    },\n\n    update(state, parentScope) {\n      if (state === void 0) {\n        state = {};\n      }\n\n      if (parentScope) {\n        this[ATTRIBUTES_KEY_SYMBOL].update(parentScope);\n      }\n\n      const newProps = evaluateProps(this.root, this[ATTRIBUTES_KEY_SYMBOL].expressions);\n      if (this.shouldUpdate(newProps, this.props) === false) return;\n      this.props = Object.freeze(Object.assign({}, initialProps, {}, newProps));\n      this.state = computeState(this.state, state);\n      this.onBeforeUpdate(this.props, this.state);\n      this[TEMPLATE_KEY_SYMBOL].update(this, parentScope);\n      this.onUpdated(this.props, this.state);\n      return this;\n    },\n\n    unmount(preserveRoot) {\n      this.onBeforeUnmount(this.props, this.state);\n      this[ATTRIBUTES_KEY_SYMBOL].unmount(); // if the preserveRoot is null the template html will be left untouched\n      // in that case the DOM cleanup will happen differently from a parent node\n\n      this[TEMPLATE_KEY_SYMBOL].unmount(this, {}, preserveRoot === null ? null : !preserveRoot);\n      this.onUnmounted(this.props, this.state);\n      return this;\n    }\n\n  })), Object.keys(component).filter(prop => isFunction(component[prop])));\n}\n/**\n * Component initialization function starting from a DOM node\n * @param   {HTMLElement} element - element to upgrade\n * @param   {Object} initialProps - initial component properties\n * @param   {string} componentName - component id\n * @returns {Object} a new component instance bound to a DOM node\n */\n\nfunction mountComponent(element, initialProps, componentName) {\n  const name = componentName || getName(element);\n  if (!COMPONENTS_IMPLEMENTATION_MAP.has(name)) panic(`The component named \"${name}\" was never registered`);\n  const component = COMPONENTS_IMPLEMENTATION_MAP.get(name)({\n    props: initialProps\n  });\n  return component.mount(element);\n}\n\n/**\n * Similar to compose but performs from left-to-right function composition.<br/>\n * {@link https://30secondsofcode.org/function#composeright see also}\n * @param   {...[function]} fns) - list of unary function\n * @returns {*} result of the computation\n */\n/**\n * Performs right-to-left function composition.<br/>\n * Use Array.prototype.reduce() to perform right-to-left function composition.<br/>\n * The last (rightmost) function can accept one or more arguments; the remaining functions must be unary.<br/>\n * {@link https://30secondsofcode.org/function#compose original source code}\n * @param   {...[function]} fns) - list of unary function\n * @returns {*} result of the computation\n */\n\nfunction compose() {\n  for (var _len2 = arguments.length, fns = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    fns[_key2] = arguments[_key2];\n  }\n\n  return fns.reduce((f, g) => function () {\n    return f(g(...arguments));\n  });\n}\n\nconst {\n  DOM_COMPONENT_INSTANCE_PROPERTY: DOM_COMPONENT_INSTANCE_PROPERTY$1,\n  COMPONENTS_IMPLEMENTATION_MAP: COMPONENTS_IMPLEMENTATION_MAP$1,\n  PLUGINS_SET: PLUGINS_SET$1\n} = globals;\n/**\n * Riot public api\n */\n\n/**\n * Register a custom tag by name\n * @param   {string} name - component name\n * @param   {Object} implementation - tag implementation\n * @returns {Map} map containing all the components implementations\n */\n\nfunction register(name, _ref) {\n  let {\n    css,\n    template,\n    exports\n  } = _ref;\n  if (COMPONENTS_IMPLEMENTATION_MAP$1.has(name)) panic(`The component \"${name}\" was already registered`);\n  COMPONENTS_IMPLEMENTATION_MAP$1.set(name, createComponent({\n    name,\n    css,\n    template,\n    exports\n  }));\n  return COMPONENTS_IMPLEMENTATION_MAP$1;\n}\n/**\n * Unregister a riot web component\n * @param   {string} name - component name\n * @returns {Map} map containing all the components implementations\n */\n\nfunction unregister(name) {\n  if (!COMPONENTS_IMPLEMENTATION_MAP$1.has(name)) panic(`The component \"${name}\" was never registered`);\n  COMPONENTS_IMPLEMENTATION_MAP$1.delete(name);\n  cssManager.remove(name);\n  return COMPONENTS_IMPLEMENTATION_MAP$1;\n}\n/**\n * Mounting function that will work only for the components that were globally registered\n * @param   {string|HTMLElement} selector - query for the selection or a DOM element\n * @param   {Object} initialProps - the initial component properties\n * @param   {string} name - optional component name\n * @returns {Array} list of nodes upgraded\n */\n\nfunction mount(selector, initialProps, name) {\n  return $(selector).map(element => mountComponent(element, initialProps, name));\n}\n/**\n * Sweet unmounting helper function for the DOM node mounted manually by the user\n * @param   {string|HTMLElement} selector - query for the selection or a DOM element\n * @param   {boolean|null} keepRootElement - if true keep the root element\n * @returns {Array} list of nodes unmounted\n */\n\nfunction unmount(selector, keepRootElement) {\n  return $(selector).map(element => {\n    if (element[DOM_COMPONENT_INSTANCE_PROPERTY$1]) {\n      element[DOM_COMPONENT_INSTANCE_PROPERTY$1].unmount(keepRootElement);\n    }\n\n    return element;\n  });\n}\n/**\n * Define a riot plugin\n * @param   {Function} plugin - function that will receive all the components created\n * @returns {Set} the set containing all the plugins installed\n */\n\nfunction install(plugin) {\n  if (!isFunction(plugin)) panic('Plugins must be of type function');\n  if (PLUGINS_SET$1.has(plugin)) panic('This plugin was already install');\n  PLUGINS_SET$1.add(plugin);\n  return PLUGINS_SET$1;\n}\n/**\n * Uninstall a riot plugin\n * @param   {Function} plugin - plugin previously installed\n * @returns {Set} the set containing all the plugins installed\n */\n\nfunction uninstall(plugin) {\n  if (!PLUGINS_SET$1.has(plugin)) panic('This plugin was never installed');\n  PLUGINS_SET$1.delete(plugin);\n  return PLUGINS_SET$1;\n}\n/**\n * Helpter method to create component without relying on the registered ones\n * @param   {Object} implementation - component implementation\n * @returns {Function} function that will allow you to mount a riot component on a DOM node\n */\n\nfunction component(implementation) {\n  return (el, props) => compose(c => c.mount(el), c => c({\n    props\n  }), createComponent)(implementation);\n}\n/** @type {string} current riot version */\n\nconst version = 'v4.6.2'; // expose some internal stuff that might be used from external tools\n\nconst __ = {\n  cssManager,\n  defineComponent,\n  globals\n};\n\nexport { __, component, install, mount, register, uninstall, unmount, unregister, version };\n","<formr>\r\n    <form name={props.id} onchange={validate} oninput={validate} novalidate>\r\n        <button type=\"button\" onclick={er}>Go</button>\r\n        <button type=\"button\" onclick={seter}>set</button>\r\n        <div each={ (field, i) in state.desc }>\r\n            <div class=\"form-group\" name=\"fgroup_{field.id || i}\">\r\n                <div is={'i'+callType(field.type)} field={checkField(field,i)} attr={state.attr} index={i}></div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <script>\r\n        export default {\r\n            checkField(field, i) {\r\n                field.id = field.id || 'ffield' + i\r\n                return field\r\n            },\r\n            onBeforeMount() {\r\n                //console.log(window)\r\n                this.state.desc = window.fields[this.props.id].desc\r\n                this.state.attr = window.fields[this.props.id].attr\r\n                this.state.attr.id = this.props.id\r\n            },\r\n            onMounted() {\r\n                this.ctrlRun(this.props.id)\r\n            },\r\n            callType(type) {\r\n                let types = ['textarea', 'date', 'color', 'datetime', 'datetime-local', 'email', 'month', 'number', 'tel', 'time', 'url', 'week']\r\n                if (types.indexOf(type) > -1) return 'text'\r\n                else return type\r\n            },\r\n            click() {\r\n                this.fields.push({\r\n                    type: 'text',\r\n                    size: 10,\r\n                    value: 'First item'\r\n                })\r\n                this.update()\r\n            },\r\n            validate(ev) {\r\n                //console.log('validation', ev)\r\n                let targetForm = ev.target.closest(\"form\")\r\n                this.ctrlRun(targetForm.name)\r\n                let invalidFeedback = '<i class=\"text-danger fas fa-times fa-fw mx-2\" aria-hidden=\"true\"></i>'\r\n                let invalidFeedbackMsg = '<i class=\"text-danger fas fa-exclamation-triangle fa-fw mx-2\" aria-hidden=\"true\"></i>'\r\n                let validFeedback = '<i class=\"text-success fas fa-check fa-fw mx-2\" aria-hidden=\"true\"></i>'\r\n                let feedBackElt = ev.target.closest(\".form-group\").querySelector(\".inputFeedback\")\r\n                let feedBackMsgElt = ev.target.closest(\".form-group\").querySelector(\".inputFeedbackMsg\")\r\n                let field = ev.target\r\n                let validity = ev.target.validity\r\n                if (!validity) return\r\n                let isValid = validity.valid\r\n\r\n                let msgs = []\r\n                let msg = ''\r\n                if (field.disabled || field.type == 'file') return\r\n                if (validity.valueMissing) msgs.push('valueMissing')\r\n                if (validity.typeMismatch && field.type == 'email') msgs.push('invalid email')\r\n                if (validity.typeMismatch && field.type == 'url') msgs.push('invalid URL')\r\n                if (validity.tooShort) msgs.push('Lengthen this text to ' + field.minLength + ' characters or more. You are currently using ' + field.value.length + ' characters')\r\n                if (validity.tooLong) msgs.push('Shorten this text to no more than ' + field.maxLength + ' characters. You are currently using ' + field.value.length + ' characters')\r\n                if (validity.badInput) msgs.push('invalid number')\r\n                if (validity.stepMismatch) msgs.push('invalid step')\r\n                if (validity.rangeOverflow) msgs.push('Select a value that is no more than ' + field.max)\r\n                if (validity.rangeUnderflow) msgs.push('Select a value that is no less than ' + field.min)\r\n                if (validity.patternMismatch && field.getAttribute('patternInfo')) msgs.push(field.getAttribute('patternInfo')) // If pattern info is included, return custom error\r\n                if (validity.patternMismatch && !field.getAttribute('patternInfo')) msgs.push(\"Didn't the requested format\")\r\n                let self = this\r\n                msgs.forEach(function(m) {\r\n                    msg += invalidFeedbackMsg + self.i18n(m) + '. '\r\n                })\r\n                // If all else fails, msg is a generic catchall error\r\n                if (!isValid && !msg) msg = 'The value you entered for this field is invalid. '\r\n                feedBackElt.innerHTML = (isValid ? validFeedback : invalidFeedback)\r\n                feedBackMsgElt.innerHTML = isValid ? '' : msg\r\n\r\n                //enable buttons with attributes 'waitValid' if all fields in the form is valid\r\n                let nbInvalidFields = targetForm.querySelectorAll('.form-control:invalid')\r\n                console.log(nbInvalidFields)\r\n                let nwaitValid = targetForm.querySelectorAll('[waitvalid]')\r\n                nwaitValid.forEach(function(e) {\r\n                    e.disabled = nbInvalidFields.length\r\n                })\r\n            },\r\n            ctrlRun(formName) {\r\n                let formElt, selector, node\r\n                formElt = document.getElementsByName(formName)[0]\r\n                formElt.querySelectorAll(\"input[ctrlChecked][ctrlUnchecked]\").forEach(function(elt) {\r\n                    elt.getAttribute(\"ctrlChecked\").split(',').forEach(function(name) {\r\n                        selector = '[name=fgroup_' + name + ']'\r\n                        node = formElt.querySelector(selector)\r\n                        if (elt.checked) node.classList.remove('hide')\r\n                        else node.classList.add('hide')\r\n                    })\r\n                    elt.getAttribute(\"ctrlUnchecked\").split(',').forEach(function(name) {\r\n                        selector = '[name=fgroup_' + name + ']'\r\n                        node = formElt.querySelector(selector)\r\n                        if (elt.checked) node.classList.add('hide')\r\n                        else node.classList.remove('hide')\r\n                    })\r\n                })\r\n            },\r\n            er() {\r\n                console.log(getFormValues('form1'))\r\n            },\r\n            seter() {\r\n                console.log(setFormValues('form1', data))\r\n            }\r\n        }\r\n\r\n    </script>\r\n    <style>\r\n        .out {\r\n            -webkit-transition: height 1s;\r\n            -moz-transition: height 1s;\r\n            -ms-transition: height 1s;\r\n            -o-transition: height 1s;\r\n            transition: height 1s;\r\n            height: 0;\r\n        }\r\n\r\n        /*-- redefine some bootstrap style --*/\r\n        .hide,\r\n        .form-inline .hide {\r\n            display: none;\r\n        }\r\n\r\n        .form-group {\r\n            margin-bottom: 1.5rem;\r\n            /*bottom margin after each field*/\r\n        }\r\n\r\n\r\n        label {\r\n            font-size: 1.1rem;\r\n            font-weight: 500;\r\n        }\r\n\r\n        button:disabled {\r\n            cursor: not-allowed;\r\n        }\r\n\r\n        button:focus,\r\n        input:focus,\r\n        textarea:focus {\r\n            outline: none !important;\r\n            border-color: #719ECE !important;\r\n            box-shadow: 0 0 10px #719ECE !important;\r\n        }\r\n\r\n        .fucfirst:first-letter {\r\n            text-transform: capitalize;\r\n        }\r\n\r\n        .input-group .input-group-append:last-child .btn:not(:last-child):not(.dropdown-toggle),\r\n        .input-group .input-group-append:last-child .input-group-text:not(:last-child),\r\n        .input-group .input-group-append:not(:last-child) .btn,\r\n        .input-group .input-group-append:not(:last-child) .input-group-text,\r\n        .input-group .input-group-prepend .btn,\r\n        .input-group .input-group-prepend .input-group-text {\r\n            border-top-right-radius: 0;\r\n            border-bottom-right-radius: 0;\r\n        }\r\n\r\n        .input-group .input-group-append .btn,\r\n        .input-group .input-group-append .input-group-text,\r\n        .input-group .input-group-prepend:first-child .btn:not(:first-child),\r\n        .input-group .input-group-prepend:first-child .input-group-text:not(:first-child),\r\n        .input-group .input-group-prepend:not(:first-child) .btn,\r\n        .input-group .input-group-prepend:not(:first-child) .input-group-text {\r\n            border-top-left-radius: 0;\r\n            border-bottom-left-radius: 0;\r\n        }\r\n\r\n\r\n        .input-group .input-group-append:last-child .btn:not(:last-child):not(.dropdown-toggle),\r\n        .input-group .input-group-append:last-child .input-group-text:not(:last-child),\r\n        .input-group .input-group-append:not(:last-child) .btn,\r\n        .input-group .input-group-append:not(:last-child) .input-group-text,\r\n        .input-group .input-group-prepend .btn,\r\n        .input-group .input-group-prepend .input-group-text {\r\n            border-top-right-radius: 0;\r\n            border-bottom-right-radius: 0;\r\n        }\r\n    </style>\r\n</formr>\r\n","<ialert>\r\n    <div class=\"alert alert-{props.field.color||'info'} {props.field.class}\" role=\"alert\">\r\n        <div>\r\n            <jicon field={props.field}></jicon> {i18n(props.field.message)}\r\n            <jtooltip tip={props.field.tip}></jtooltip>\r\n        </div>\r\n        <jhelp help={props.field.help}></jhelp>\r\n    </div>\r\n    <style>\r\n        .alert div {\r\n            font-size: 2rem;\r\n        }\r\n    </style>\r\n</ialert>\r\n","<ibutton>\r\n    <button { ...props.field } type=\"button\" class=\"btn btn-{props.field.color?props.field.color:'outline-primary'} {props.field.class}\" style=\"text-transform: capitalize;\" name={props.field.id} onclick={this[props.field.onclick]} id={} disabled={props.field.waitValid || props.field.disabled}>\r\n        <jicon field={props.field}></jicon> {i18n(props.field.title)}\r\n        <jtooltip tip={props.field.tip}></jtooltip>\r\n    </button>\r\n    <jhelp help={props.field.help}></jhelp>\r\n\r\n    <script>\r\n        export default {\r\n            click(ev) { //not used\r\n                action = ev.target.getAttribute('action')\r\n                param = ev.target.getAttribute('param')\r\n                console.log(action, param, this)\r\n                if (typeof action == \"function\") action(event, param)\r\n                if (typeof this[action] == \"function\") this[action](event, param)\r\n            },\r\n            dosomething(ev, param) //test action\r\n            {\r\n                alert('dosomething')\r\n            }\r\n        }\r\n\r\n    </script>\r\n</ibutton>\r\n","<icheckbox>\r\n    <jlabel field={props.field}></jlabel>\r\n    <jtooltip tip={props.field.tip}></jtooltip>\r\n    <jhelp help={props.field.help}></jhelp>\r\n    <span class=\"inputFeedback\"></span>\r\n    <small class=\"inputFeedbackMsg\"></small>\r\n    <div class=\"aaad-inline\">\r\n        <template each={ option in props.field.opts }>\r\n            <div class=\"row\">\r\n                <div if={option.uncheckedLabel} class=\"fucfirst col-auto mb-2\">{i18n(option.uncheckedLabel)}</div>\r\n                <div class=\"col-auto\">\r\n                    <label class=\"ucfirst {props.field.type=='switch' ?'fswitch':'fcheck'}\">\r\n                        <span if={!option.checkedLabel} class=\"mr-1\"> {i18n(option.label)}</span>\r\n                        <jtooltip if={!option.checkedLabel} tip={option.tip}></jtooltip>\r\n                        <jhelp if={!option.checkedLabel} help={option.help}></jhelp>\r\n                        <input { ...props.field } type={\"checkbox\"} class=\"form-control\" checkedValue={option.checkedValue} unCheckedValue={option.uncheckedValue} checked={isChecked(option)} ctrlChecked={ctrlToString(option,'checked')} ctrlUnchecked={ctrlToString(option,'unchecked')} name={buildId(option)} id={}>\r\n                        <span class={props.field.type=='switch' ?'fswitchslider fswitchround':'fcheckmark'}></span>\r\n                    </label>\r\n                </div>\r\n                <div if={option.checkedLabel} class=\"fucfirst col-auto mb-2\">\r\n                    {i18n(option.checkedLabel)}\r\n                </div>\r\n                <div class=\"fucfirst col-auto mb-2\">\r\n                    <jtooltip if={option.checkedLabel} tip={option.tip}></jtooltip>\r\n                    <jhelp if={option.checkedLabel} help={option.help}></jhelp>\r\n                </div>\r\n            </div>\r\n        </template>\r\n    </div>\r\n    <script>\r\n        export default {\r\n            isChecked(option) {\r\n                return (option.checked || option.value == option.checkedValue || option.value == true)\r\n            },\r\n            ctrlToString(option, which) {\r\n                if (option.ctrl && option.ctrl[which]) return option.ctrl[which].join()\r\n                else return false\r\n            },\r\n            buildId(option) {\r\n                if (option.id) return this.props.field.id + '.' + option.id\r\n                else return this.props.field.id\r\n            }\r\n        }\r\n\r\n    </script>\r\n    <style>\r\n        /* Customize the label (the fswitch) */\r\n        .fswitch {\r\n            display: block;\r\n            position: relative;\r\n\r\n            padding-left: 3.2rem;\r\n            margin-bottom: 12px;\r\n            cursor: pointer;\r\n            -webkit-user-select: none;\r\n            -moz-user-select: none;\r\n            -ms-user-select: none;\r\n            user-select: none;\r\n        }\r\n\r\n        /* Hide the browser's default checkbox */\r\n        .fswitch input {\r\n            position: absolute;\r\n            opacity: 0;\r\n            cursor: pointer;\r\n            height: 0;\r\n            width: 0;\r\n        }\r\n\r\n        /* Create a custom checkbox */\r\n        .fswitchslider {\r\n            position: absolute;\r\n            top: 3px;\r\n            left: 0;\r\n            height: 1.5rem;\r\n            width: 2.75rem;\r\n            background-color: #eee;\r\n            -webkit-transition: .4s;\r\n            transition: .4s;\r\n\r\n        }\r\n\r\n        /* On mouse-over, add a grey background color */\r\n        .fswitch:hover input~.fswitchslider {\r\n            background-color: #ccc;\r\n        }\r\n\r\n        /* When the checkbox is checked, add a blue background */\r\n        .fswitch input:checked~.fswitchslider {\r\n            background-color: #2196F3;\r\n        }\r\n\r\n\r\n\r\n        .fswitchslider:before {\r\n            position: absolute;\r\n            content: \"\";\r\n            height: 1.35rem;\r\n            width: 1.35rem;\r\n            left: 0.1rem;\r\n            bottom: 0.1rem;\r\n            background-color: white;\r\n            -webkit-transition: .4s;\r\n            transition: .4s;\r\n        }\r\n\r\n\r\n        .fswitch input:checked~.fswitchslider {\r\n            background-color: blue;\r\n        }\r\n\r\n        .fswitch input:checked~.fswitchslider:before {\r\n            background-image: radial-gradient(#ffffff, rgb(210, 210, 210));\r\n        }\r\n\r\n\r\n        .fswitch input:focus~.fswitchslider {\r\n            --box-shadow: 0 0 1px var(--navBarBg-backgroundColor);\r\n            box-shadow: 0 0 4px blue;\r\n        }\r\n\r\n        .fswitch input:checked~.fswitchslider:before {\r\n            -webkit-transform: translateX(1.25rem);\r\n            -ms-transform: translateX(1.25rem);\r\n            transform: translateX(1.25rem);\r\n        }\r\n\r\n        .fswitch input[disabled]~.fswitchslider {\r\n            opacity: 0.5;\r\n            cursor: not-allowed;\r\n        }\r\n\r\n\r\n        .fswitchround {\r\n            border-radius: 3.4rem;\r\n        }\r\n\r\n        .fswitchround:before {\r\n            border-radius: 50%;\r\n        }\r\n\r\n\r\n\r\n        /* Customize the label (the fcheck) */\r\n        .fcheck {\r\n            display: block;\r\n            position: relative;\r\n            padding-left: 35px;\r\n            margin-bottom: 12px;\r\n            cursor: pointer;\r\n            -webkit-user-select: none;\r\n            -moz-user-select: none;\r\n            -ms-user-select: none;\r\n            user-select: none;\r\n        }\r\n\r\n        /* Hide the browser's default checkbox */\r\n        .fcheck input {\r\n            position: absolute;\r\n            opacity: 0;\r\n            cursor: pointer;\r\n            height: 0;\r\n            width: 0;\r\n        }\r\n\r\n        /* Create a custom checkbox */\r\n        .fcheckmark {\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            height: 25px;\r\n            width: 25px;\r\n            background-color: #eee;\r\n            -webkit-transition: .4s;\r\n            transition: .4s;\r\n        }\r\n\r\n        /* On mouse-over, add a grey background color */\r\n        .fcheck:hover input~.fcheckmark {\r\n            background-color: #ccc;\r\n        }\r\n\r\n        /* When the checkbox is checked, add a blue background */\r\n        .fcheck input:checked~.fcheckmark {\r\n            background-color: #2196F3;\r\n        }\r\n\r\n        /* Create the fcheckmark/indicator (hidden when not checked) */\r\n        .fcheckmark:after {\r\n            content: \"\";\r\n            position: absolute;\r\n            display: none;\r\n        }\r\n\r\n        /* Show the fcheckmark when checked */\r\n        .fcheck input:checked~.fcheckmark:after {\r\n            display: block;\r\n        }\r\n\r\n        /* Style the fcheckmark/indicator */\r\n        .fcheck .fcheckmark:after {\r\n            left: 9px;\r\n            top: 5px;\r\n            width: 6px;\r\n            height: 12px;\r\n            border: solid white;\r\n            border-width: 0 3px 3px 0;\r\n            -webkit-transform: rotate(45deg);\r\n            -ms-transform: rotate(45deg);\r\n            transform: rotate(45deg);\r\n        }\r\n\r\n    </style>\r\n</icheckbox>","<icolorpicker>\r\n    <jlabel field={props.field}></jlabel>\r\n    <jtooltip tip={props.field.tip}></jtooltip>\r\n    <span class=\"inputFeedback\"></span>\r\n    <small class=\"inputFeedbackMsg\"></small>\r\n    <jhelp help={props.field.help}></jhelp>\r\n    <div name={props.attr.id +\"_colorpicker_\" + props.field.id}></div>\r\n    <input type=\"hidden\" class=\"form-control\" name={props.field.id} value={props.field.value} colorpicker=true>\r\n\r\n    <script>\r\n        export default {\r\n            onMounted() {\r\n                let formId = this.props.attr.id\r\n                //https://github.com/Simonwep/pickr\r\n                const pickr = Pickr.create({\r\n                    el: '[name=\"' + formId + '_colorpicker_' + this.props.field.id + '\"]',\r\n                    theme: 'nano', // or 'monolith', or 'nano'\r\n                    //default:'rgba(239, 1, 5, 1)',\r\n                    // default:'#16D92A',\r\n\r\n                    comparison: false,\r\n\r\n                    swatches: [\r\n                        'rgba(244, 67, 54, 1)',\r\n                        'rgba(233, 30, 99, 0.95)',\r\n                        'rgba(156, 39, 176, 0.9)',\r\n                        'rgba(103, 58, 183, 0.85)',\r\n                        'rgba(63, 81, 181, 0.8)',\r\n                        'rgba(33, 150, 243, 0.75)',\r\n                        'rgba(3, 169, 244, 0.7)',\r\n                        'rgba(0, 188, 212, 0.7)',\r\n                        'rgba(0, 150, 136, 0.75)',\r\n                        'rgba(76, 175, 80, 0.8)',\r\n                        'rgba(139, 195, 74, 0.85)',\r\n                        'rgba(205, 220, 57, 0.9)',\r\n                        'rgba(255, 235, 59, 0.95)',\r\n                        'rgba(255, 193, 7, 1)'\r\n                    ],\r\n\r\n                    components: {\r\n\r\n                        // Main components\r\n                        preview: true,\r\n                        opacity: true,\r\n                        hue: true,\r\n\r\n                        // Input / output Options\r\n                        interaction: {\r\n                            hex: true,\r\n                            rgba: true,\r\n                            hsla: false,\r\n                            hsva: false,\r\n                            cmyk: false,\r\n                            input: true,\r\n                            clear: false,\r\n                            save: true,\r\n                            cancel: true\r\n                        }\r\n                    },\r\n                    strings: {\r\n                        save: 'Select', // Default for save button\r\n                        clear: 'Clear', // Default for clear button\r\n                        cancel: 'Cancel' // Default for cancel button\r\n                    }\r\n                })\r\n\r\n                pickr.on('init', instance => {\r\n                    //console.log(instance)\r\n                    let setColor = instance._root.root.closest(\".form-group\").querySelector(\"[type='hidden']\").value\r\n                    pickr.setColor(setColor, true)\r\n                })\r\n\r\n                pickr.on('save', (color, instance) => {\r\n                    let rgba = color.toRGBA().toString()\r\n                    instance._root.root.closest(\".form-group\").querySelector(\"[type='hidden']\").value = rgba\r\n                }).on('cancel', () => {\r\n                    pickr.hide()\r\n                })\r\n\r\n                document.addEventListener(this.props.attr.id + '_setColor_' + this.props.field.id, function(ev) {\r\n                    pickr.setColor(ev.detail.color, true)\r\n                })\r\n            }\r\n        }\r\n\r\n    </script>\r\n    <style>\r\n        .pickr .pcr-button {\r\n            height: 4em;\r\n            width: 4em;\r\n            border: 1px solid grey;\r\n        }\r\n\r\n        /* .pickr .pcr-color-palette{cursor:pointer!important;}*/\r\n\r\n    </style>\r\n</icolorpicker>\r\n","<idatetimepicker>\r\n    <jlabel field={props.field}></jlabel>\r\n    <jtooltip tip={props.field.tip}></jtooltip>\r\n    <span class=\"inputFeedback\"></span>\r\n    <small class=\"inputFeedbackMsg\"></small>\r\n    <div class=\"input-group\">\r\n        <jaddon field={props.field} placement='left'></jaddon>\r\n        <input { ...props.field } type=\"text\" class=\"form-control {props.field.class}\" name={props.field.id} value={props.field.value} id={} datetimepicker=true>\r\n        <jaddon field={props.field} placement='right'></jaddon>\r\n    </div>\r\n    <jhelp help={props.field.help}></jhelp>\r\n    <script>\r\n        export default {\r\n            onMounted() {\r\n                let formId = this.props.attr.id\r\n                const elt = document.getElementsByName(formId)[0].querySelector('[name=\"' + this.props.field.id + '\"]')\r\n                const datetimepicker=flatpickr(elt,{\r\n                    allowInput:true,\r\n                    enableTime: this.props.field.enableTime,\r\n                    dateFormat: \"U\",\r\n                    altInput : true,\r\n                    altFormat: \"l j F Y  H:i\",\r\n                    defaultDate : this.props.field.value,\r\n                    locale : this.props.attr.lang\r\n                })\r\n                let self=this\r\n                document.addEventListener(this.props.attr.id + '_setDatetime_' + this.props.field.id, function(ev) {\r\n                    datetimepicker.setDate(ev.detail.epoch)\r\n                })\r\n            }\r\n        }\r\n    </script>\r\n</idatetimepicker>","<ihr>\r\n    <div name={props.field.id}>\r\n        <jicon field={props.field}></jicon>\r\n        <span class=\"fhrlabel {props.field.class}\"> {i18n(props.field.label)}</span>\r\n        <jtooltip tip={props.field.tip}></jtooltip>\r\n        <hr>\r\n        <jhelp help={props.field.help}></jhelp>\r\n    </div>\r\n    <style>\r\n        .fhrlabel {\r\n            font-size: 1.3rem;\r\n        }\r\n\r\n        hr {\r\n            margin: 0;\r\n        }\r\n\r\n    </style>\r\n</ihr>\r\n","<iradio>\r\n    <jlabel field={props.field}></jlabel>\r\n    <jtooltip tip={props.field.tip}></jtooltip>\r\n    <span class=\"inputFeedback\"></span>\r\n    <small class=\"inputFeedbackMsg\"></small>\r\n    <jhelp help={props.field.help}></jhelp>\r\n    <div class=\"aaad-inline\">\r\n        <template each={ option in props.field.opts }>\r\n            <label class=\"fradio\">{i18n(option.label)}\r\n                <jtooltip tip={option.tip}></jtooltip>\r\n                <jhelp help={option.help}></jhelp>\r\n                <input { ...props.field } type=\"radio\" class=\"form-control\" checked={isChecked(option)} value={option.id} name={props.field.id} id={}>\r\n                <span class=\"fradiomark\"></span>\r\n            </label>\r\n        </template>\r\n    </div>\r\n    <script>\r\n        export default {\r\n            isChecked(option) {\r\n                return (option.checked || option.id == this.props.field.value)\r\n            }\r\n        }\r\n\r\n    </script>\r\n    <style>\r\n        /* Customize the label (the fradio) */\r\n        .fradio {\r\n            display: block;\r\n            position: relative;\r\n            padding-left: 35px;\r\n            margin-bottom: 12px;\r\n            cursor: pointer;\r\n            -webkit-user-select: none;\r\n            -moz-user-select: none;\r\n            -ms-user-select: none;\r\n            user-select: none;\r\n        }\r\n\r\n        /* Hide the browser's default checkbox */\r\n        .fradio input {\r\n            position: absolute;\r\n            opacity: 0;\r\n            cursor: pointer;\r\n            height: 0;\r\n            width: 0;\r\n        }\r\n\r\n        /* Create a custom checkbox */\r\n        .fradiomark {\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            height: 25px;\r\n            width: 25px;\r\n            background-color: #eee;\r\n            border-radius: 50%;\r\n            -webkit-transition: .4s;\r\n            transition: .4s;\r\n        }\r\n\r\n        /* On mouse-over, add a grey background color */\r\n        .fradio:hover input~.fradiomark {\r\n            background-color: #ccc;\r\n        }\r\n\r\n        /* When the radio is checked, add a blue background */\r\n        .fradio input:checked~.fradiomark {\r\n            background-color: #2196F3;\r\n        }\r\n\r\n        /* Create the indicator (the dot/circle - hidden when not checked) */\r\n        .fradiomark:after {\r\n            content: \"\";\r\n            position: absolute;\r\n            display: none;\r\n        }\r\n\r\n        /* Show the fradiomark when checked */\r\n        .fradio input:checked~.fradiomark:after {\r\n            display: block;\r\n        }\r\n\r\n        /* Style the indicator (dot/circle) */\r\n        .fradio .fradiomark:after {\r\n            top: 8px;\r\n            left: 8px;\r\n            width: 9px;\r\n            height: 9px;\r\n            border-radius: 50%;\r\n            background: white;\r\n        }\r\n\r\n    </style>\r\n</iradio>\r\n\r\n<!--iradio>\r\n    <jlabel field={props.field}></jlabel>\r\n    <jtooltip help={props.field.help}></jtooltip>\r\n    <template each={ option in props.field.opts }>\r\n        <div class=\"custom-control custom-radio\">\r\n            <input type=\"radio\" id={option.id} value={option.id} name={props.field.name} class=\"custom-control-input\">\r\n            <label class=\"custom-control-label\" for={option.id}>{i18n(option.label)}</label>\r\n            <jtoolTip help={option.help}></jtoolTip>\r\n        </div>\r\n    </template>\r\n</iradio-->\r\n","<irange>\r\n    <jlabel field={props.field}></jlabel>\r\n    <jtooltip tip={props.field.tip}></jtooltip>\r\n    <span class=\"inputFeedback\"></span>\r\n    <small class=\"inputFeedbackMsg\"></small>\r\n    <div class=\"input-group\">\r\n        <input { ...props.field } type=\"range\" class=\"form-control custom-range {props.field.class}\" name={props.field.id} min={props.field.min} max={props.field.max} step={props.field.step} value={props.field.value} id={}>\r\n    </div>\r\n    <jhelp help={props.field.help}></jhelp>\r\n    <style>\r\n        /*-- range --*/\r\n        input[type=range]::-webkit-slider-thumb {\r\n            background: red;\r\n            /*-- background: var(--navBarBg-backgroundColor); --*/\r\n        }\r\n\r\n        input[type=range]::-moz-range-thumb {\r\n            background: red;\r\n            /*-- background: var(--navBarBg-backgroundColor); --*/\r\n        }\r\n\r\n        input[type=range]::-ms-thumb {\r\n            background: red;\r\n            /*-- background: var(--navBarBg-backgroundColor); --*/\r\n        }\r\n    </style>\r\n</irange>\r\n","<irow>\r\n\t<div class=\"row\">\r\n        <template each={ (field, i) in props.field.desc } >\r\n            <div class=\"col form-group {field.class}\" name=\"fgroup_{field.id || i}\">\r\n                <div is={'i'+callType(field.type)} field={checkField(field,i)} attr={props.attr} index={i}></div>\r\n            </div>\r\n        </template>\r\n\t</div>\r\n    <script>\r\n        export default {\r\n                checkField(field,i){\r\n                field.id = field.id || 'ffield'+i\r\n                return field\r\n            }\r\n        }\r\n    </script>\r\n</irow>","<iselect>\r\n    <jlabel field={props.field}></jlabel>\r\n    <jtooltip tip={props.field.tip}></jtooltip>\r\n    <span class=\"inputFeedback\"></span>\r\n    <small class=\"inputFeedbackMsg\"></small>\r\n    <div class=\"input-group\">\r\n        <jaddon if={!props.field.tag} field={props.field} placement='left'></jaddon>\r\n        <select { ...props.field } multiple={props.field.multiple} class=\"form-control {props.field.class}\" selectr=true name={props.field.id} id={}>\r\n            <template each={option in props.field.opts}>\r\n                <option value={option.value} selected={isSelected(option)}>\r\n                    {i18n(option.label)}\r\n                </option>\r\n            </template>\r\n        </select>\r\n        <jaddon if={!props.field.tag} field={props.field} placement='right'></jaddon>\r\n    </div>\r\n    <jhelp help={props.field.help}></jhelp>\r\n    <script>\r\n        export default {\r\n            onMounted() {\r\n                if (this.props.field.multiple && this.props.field.tag) {\r\n                    // https://github.com/Mobius1/Selectr\r\n                    let elt = document.getElementsByName(this.props.attr.id)[0].querySelector('[name=\"' + this.props.field.id + '\"]')\r\n                    const selectr = new Selectr(elt, {\r\n                        taggable: this.props.field.userAddOption\r\n                    })\r\n                    document.addEventListener(this.props.attr.id + '_setSelectr_' + this.props.field.id, function(ev) {\r\n                        //console.log(selectr.getValue(false)) \r\n                        selectr.clear()\r\n                        selectr.setValue(ev.detail.values)                      \r\n                    })\r\n                }\r\n            },\r\n            isSelected(option) {\r\n                //console.log(option)\r\n                return (option.selected || option.value == this.props.field.value || (Array.isArray(this.props.field.value) && this.props.field.value.indexOf(option.value) > -1))\r\n            }\r\n        }\r\n\r\n    </script>\r\n    <style>\r\n        .choices__list--multiple .choices__item {\r\n            border-radius: 20px;\r\n            background-color: grey;\r\n            border: 1px solid grey;\r\n            color: #fff;\r\n        }\r\n\r\n        .choices__button {\r\n            border-left: 0px !important;\r\n        }\r\n\r\n        .choices {\r\n            width: 100%;\r\n        }\r\n\r\n    </style>\r\n</iselect>","<itext>\r\n    <jlabel field={props.field}></jlabel>\r\n    <jtooltip tip={props.field.tip}></jtooltip>\r\n    <template if={props.field.multilang} each={lang in props.attr.langs}>\r\n        <button type=\"button\" class=\"btn {btnLangColor(lang)} btn-sm ml-1\" style=\"text-transform: capitalize;\" idLang={lang} onclick={selectLang}>{langName(lang)} <span class=\"aaainputFeedback\"></span></button>\r\n    </template>\r\n    <span class=\"inputFeedback\"></span>\r\n    <small class=\"inputFeedbackMsg\"></small>\r\n\r\n    <div each={lang in state.langs} class=\"input-group {lang==state.currentLang || !lang?'':'hide'}\">\r\n        <jaddon field={props.field} placement='left'></jaddon>\r\n\r\n        <input if={props.field.type!='textarea' } { ...props.field } aaatabindex={props.index} type={state.type} class=\"form-control {props.field.class}\" defaultLang={state.defaultLang} lang={lang} baseId={props.field.id} name={buildId(lang)} value={props.field.value} autocomplete=\"on\" id={}>\r\n\r\n        <textarea if={props.field.type=='textarea' } { ...props.field } aaatabindex={props.index} class=\"form-control {props.field.class}\" rows={props.field.rows || 8} defaultLang={state.defaultLang} lang={lang} baseId={props.field.id} name={buildId(lang)} id={}>{props.field.value}</textarea>\r\n\r\n\r\n\r\n        <div if={props.field.multilang && props.attr.proposeTranslate && state.defaultLang !=lang } class=\"h-100 input-group-append\">\r\n            <button type=\"button\" class=\"btn btn-info\" onclick={translate}><i class=\"fas fa-language\"></i></button>\r\n        </div>\r\n\r\n\r\n        <jaddon field={props.field} placement='right'></jaddon>\r\n    </div>\r\n    <jhelp help={props.field.help}></jhelp>\r\n\r\n    <script>\r\n        export default {\r\n            onBeforeMount() {\r\n                this.state.currentLang = this.props.attr.langs[0]\r\n                this.state.defaultLang = this.props.attr.langs[0]\r\n                if (this.props.field.multilang) {\r\n                    this.state.langs = this.props.attr.langs\r\n                } else {\r\n                    this.state.langs = ['']\r\n                }\r\n                if (this.props.type == 'datetime') this.state.type = 'datetime-local'\r\n                else this.state.type = this.props.field.type\r\n            },\r\n            btnLangColor(lang) {\r\n                return lang == this.state.currentLang ? 'btn-secondary' : 'btn-light'\r\n            },\r\n            buildId(lang) {\r\n                return this.props.field.multilang ? this.props.field.id + '.' + lang : this.props.field.id\r\n            },\r\n            defaultValue() {\r\n                if (this.state.currentLang == this.props.attr.langs[0]) return this.props.field.value\r\n                else return null\r\n            },\r\n            selectLang(ev) {\r\n                this.state.currentLang = ev.target.attributes.idLang.value\r\n                this.update()\r\n            }\r\n        }\r\n\r\n    </script>\r\n</itext>\r\n","<itexteditor>\r\n    <jlabel field={props.field}></jlabel>\r\n    <jtooltip tip={props.field.tip}></jtooltip>\r\n    <template if={props.field.multilang} each={lang in props.attr.langs}>\r\n        <button type=\"button\" class=\"btn {btnLangColor(lang)} btn-sm ml-1\" style=\"text-transform: capitalize;\" idLang={lang} onclick={selectLang}>{langName(lang)} <span class=\"aaainputFeedback\"></span></button>\r\n    </template>\r\n    <span class=\"inputFeedback\"></span>\r\n    <small class=\"inputFeedbackMsg\"></small>\r\n\r\n    <div each={lang in state.langs} class=\"ianput-group {lang==state.currentLang || !lang?'':'hide'}\">\r\n        <span if={props.field.multilang && props.attr.proposeTranslate && state.defaultLang !=lang } class=\"h-100 input-group-append\">\r\n            <button type=\"button\" class=\"btn btn-info\" onclick={translate}><i class=\"fas fa-language\"></i></button>\r\n        </span>\r\n        <div name={buildId(lang,'_')}></div>\r\n        <input type=\"hidden\" defaultLang={state.defaultLang} lang={lang} baseId={props.field.id} name={buildId(lang)} value={props.field.value} class=\"form-control\" id={} texteditor=true>\r\n    </div>\r\n    <jhelp help={props.field.help}></jhelp>\r\n\r\n    <script>\r\n        export default {\r\n            onBeforeMount() {\r\n                this.state.currentLang = this.props.attr.langs[0]\r\n                this.state.defaultLang = this.props.attr.langs[0]\r\n                if (this.props.field.multilang) {\r\n                    this.state.langs = this.props.attr.langs\r\n                } else {\r\n                    this.state.langs = ['']\r\n                }\r\n            },\r\n            onMounted() {\r\n                //https://quilljs.com/\r\n                //see https://codepen.io/viT-1/pen/GQVaoB for html fill\r\n                const self = this\r\n                let formId = this.props.attr.id\r\n                this.state.langs.forEach(function(lang) {\r\n                    let container = document.getElementsByName(formId)[0].querySelector('[name=\"' + self.buildId(lang, '_') + '\"]')\r\n                    let input = document.getElementsByName(formId)[0].querySelector('[name=\"' + self.buildId(lang) + '\"]')\r\n                    var editor = new Quill(container, {\r\n                        modules: {\r\n                            toolbar: [\r\n                                [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\r\n                                //[{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\r\n                                //[{ 'header': 1 }, { 'header': 2 }],               // custom button values\r\n                                ['bold', 'italic', 'underline', 'strike', 'link'],        // toggled buttons\r\n                                [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme\r\n                                [{ 'align': [] }],                                \r\n                                [{ 'list': 'ordered'}, { 'list': 'bullet' }],\r\n                                ['video', 'image'],\r\n                                ['blockquote', 'code-block'],\r\n                                [{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript\r\n                                [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent\r\n                                [{ 'direction': 'rtl' }],                       // text direction\r\n                                [{ 'font': [] }],\r\n                                ['clean'],\r\n                                ['translate']\r\n                            ]\r\n                        },\r\n                        theme: 'snow'\r\n                    })\r\n                    editor.root.innerHTML=self.props.field.value\r\n                    //editor.clipboard.dangerouslyPasteHTML(self.props.field.value)\r\n                    \r\n                    editor.on('text-change', function() {\r\n                        var delta = editor.getContents()\r\n                        var text = editor.getText()\r\n                        var html = editor.root.innerHTML\r\n                        input.value=editor.root.innerHTML\r\n                    })\r\n                    document.addEventListener(formId + '_setTexteditor_' + self.buildId(lang), function(ev) {\r\n                        //editor.clipboard.dangerouslyPasteHTML(ev.detail.content)\r\n                        editor.root.innerHTML=ev.detail.content\r\n                    })\r\n                })\r\n            },\r\n            btnLangColor(lang) {\r\n                return lang == this.state.currentLang ? 'btn-secondary' : 'btn-light'\r\n            },\r\n            buildId(lang, separator) {\r\n                return this.props.field.multilang ? this.props.field.id + (separator || '.') + lang : this.props.field.id\r\n            },\r\n            defaultValue() {\r\n                if (this.state.currentLang == this.props.attr.langs[0]) return this.props.field.value\r\n                else return null\r\n            },\r\n            selectLang(ev) {\r\n                this.state.currentLang = ev.target.attributes.idLang.value\r\n                this.update()\r\n            }\r\n        }\r\n\r\n    </script>\r\n</itexteditor>\r\n","<jlabel>\r\n\t<label class=\"label fucfirst\" for={props.field.id}>{i18n(props.field.label)}</label> \r\n    <span if={props.field.required} class=\"inputRequired mx-1\"><i class=\"fas fa-asterisk fa-fw\" aria-hidden=\"true\"></i></span>\r\n    <style>\r\n        .label\r\n        {\r\n            font-size:1.3rem;\r\n        }\r\n        .inputRequired{\r\n            color: red;\r\n        }\r\n    </style>\r\n</jlabel>","<jtooltip>\r\n    <div if={props.tip} class=\"ftooltip\">\r\n        <i class=\"far fa-question-circle mx-1\"></i>\r\n        <div class=\"ftooltipText\">{i18n(props.tip)}</div>\r\n    </div>\r\n\r\n    <style>\r\n        .ftooltip\r\n        {\r\n            position: relative;\r\n            display: inline-block;\r\n        }\r\n\r\n        .ftooltip .ftooltipText\r\n        {\r\n            font-size:1rem!important;\r\n            visibility: hidden;\r\n            width: 12rem;\r\n            background-color: #ffc107;\r\n            color: white;\r\n            text-align: center;\r\n            border: thin solid lightgray;\r\n            border-radius: 6px;\r\n            padding: 5px 0;\r\n            position: absolute;/* Position the tooltip text */\r\n            z-index: 10;\r\n            bottom: 125%;\r\n            left: 0%;\r\n            margin-left: -60px;\r\n        }\r\n\r\n        .ftooltip:hover .ftooltipText\r\n        {\r\n            visibility: visible;\r\n        }\r\n    </style>\r\n</jtooltip>\r\n","import * as riot from 'riot'\r\n\r\nriot.install(function (component) {\r\n    window.addEventListener('updateAll', () => {\r\n        component.update()\r\n    })\r\n    component.updateAll = function () {\r\n        window.dispatchEvent(new Event('updateAll'))\r\n    }\r\n    component.i18n = function (id) {\r\n        return id\r\n    }\r\n    component.langName = function (id) {\r\n        const langs = {\r\n            fr: 'français',\r\n            en: 'English'\r\n        }\r\n        return langs[id] || id\r\n    }\r\n    component.selectIcon = function (field) {\r\n        var ret, id = '',\r\n            subType = '',\r\n            type = ''\r\n        if (field.icon && field.icon != 'none') return field.icon\r\n        if (field.id) id = field.id.toLowerCase()\r\n        if (field.type) type = field.type\r\n        if (field.onclick && !type) type = 'button'\r\n        let autoIcons = {\r\n            tags: 'fas fa-tags',\r\n            logon: 'fas fa-user',\r\n            address: 'fas fa-map-marker-alt',\r\n            name: 'fas fa-user',\r\n            url: 'fas fa-user',\r\n            lang: 'fas fa-language',\r\n            google: 'fab fa-google',\r\n            twitter: 'twitter',\r\n            facebook: 'fab fa-facebook',\r\n            datetimepicker: 'fas fa-calendar-alt',\r\n            date: 'fas fa-calendar-alt',\r\n            month: 'fas fa-calendar-alt',\r\n            datetime: 'fas fa-calendar-alt',\r\n            tel: 'fas fa-phone',\r\n            mail: 'fas fa-envelope',\r\n            email: 'fas fa-envelope',\r\n            password: 'fas fa-key',\r\n            number: 'fas fa-list-ol',\r\n            button: 'fas fa-mouse-pointer'\r\n        }\r\n        for (var possibleId in autoIcons) {\r\n            if (id.indexOf(possibleId) != -1 ||\r\n                type.indexOf(possibleId) != -1\r\n            ) return autoIcons[possibleId]\r\n        }\r\n        if (!ret) ret = 'fas fa-greater-than';\r\n        return ret\r\n    }\r\n    component.callType = function (type) {\r\n        let types = {\r\n            text: ['text', 'textarea', 'date', 'color', 'datetime', 'datetime-local', 'email', 'month', 'number', 'tel', 'time', 'url', 'week'],\r\n            checkbox: ['checkbox', 'switch']\r\n        }\r\n        if (types.text.indexOf(type) > -1) return 'text'\r\n        if (types.checkbox.indexOf(type) > -1) return 'checkbox'\r\n        return type\r\n    }\r\n    component.translate = function (ev) {\r\n        let elt = ev.target.closest(\".input-group\").querySelector(\".form-control\")\r\n        let defaultLang = elt.getAttribute('defaultLang')\r\n        let lang = elt.getAttribute('lang')\r\n        let eltFromId = elt.getAttribute('baseId') + '.' + defaultLang\r\n        console.log(eltFromId, defaultLang, lang)\r\n        let eltFromValue = ev.target.closest(\".form-group\").querySelector('[name=\"' + eltFromId + '\"]').value\r\n        //console.log(ev.target.closest(\".form-group\").querySelector('[name=\"'+eltFromId+'\"]').getAttribute('name'))\r\n        elt.value = 'Transalion : ' + defaultLang + ' to ' + lang + ':' + eltFromValue\r\n    }\r\n})\r\n\r\n\r\nexport function getFormValues(formName) {\r\n    var data = {}\r\n    let inputs = document.getElementsByName(formName)[0].querySelectorAll('.form-control')\r\n    inputs.forEach(function (input) {\r\n        if (input.name) {\r\n            let type = input.type\r\n            switch (type) {\r\n                case 'checkbox':\r\n                    if (input.checked) field(data, input.name, input.getAttribute('checkedValue') || true)\r\n                    else field(data, input.name, input.getAttribute('uncheckedValue') || false)\r\n                    break\r\n                case 'select-multiple': //this is a special type property of dom  : https://www.w3schools.com/jsref/prop_select_type.asp\r\n                    field(data, input.name, [...input.options].filter((x) => x.selected).map((x) => x.value))\r\n                    break\r\n                case 'radio':\r\n                    if (input.checked) field(data, input.name, input.value)\r\n                    if (!field(data, input.name)) field(data, input.name, null)\r\n                    break\r\n                default: //text, select-one, password, hidden, email, tel, textarea...... all others\r\n                    field(data, input.name, input.value)\r\n            }\r\n        }\r\n    })\r\n    return data\r\n}\r\n\r\nexport function setFormValues(formName, data) {\r\n    let inputs = document.getElementsByName(formName)[0].querySelectorAll('.form-control[name]') //find all form-control with a name\r\n    inputs.forEach(function (input) {\r\n        let type = input.type\r\n\r\n        if (input.getAttribute('colorpicker')) type = 'colorpicker'\r\n        if (input.getAttribute('datetimepicker')) type = 'datetimepicker'\r\n        if (input.getAttribute('texteditor')) type = 'texteditor'\r\n\r\n        let val = field(data, input.name)\r\n        switch (type) {\r\n            case 'checkbox':\r\n                input.checked = (input.checkedValue == val && input.uncheckedValue != val) || val\r\n                break\r\n            case 'select-multiple':\r\n                if (input.selectr) { //selectr tag\r\n                    var setSelectrEvent = new CustomEvent(formName + '_setSelectr_' + input.name, {\r\n                        detail: {\r\n                            values: val\r\n                        }\r\n                    })\r\n                    document.dispatchEvent(setSelectrEvent)\r\n                } else Array.prototype.forEach.call(input.options, function (opt) {\r\n                    opt.selected = (val && val.indexOf(opt.value) > -1)\r\n                })\r\n                break\r\n            case 'colorpicker':\r\n                var setColorEvent = new CustomEvent(formName + '_setColor_' + input.name, {\r\n                    detail: {\r\n                        color: val\r\n                    }\r\n                })\r\n                document.dispatchEvent(setColorEvent)\r\n                break\r\n            case 'datetimepicker':\r\n            console.log('typeA',type,input.name)\r\n                var setDatetimeEvent = new CustomEvent(formName + '_setDatetime_' + input.name, {\r\n                    detail: {\r\n                        epoch: val\r\n                    }\r\n                })\r\n                document.dispatchEvent(setDatetimeEvent)\r\n                break\r\n            case 'texteditor':\r\n                var setTexteditorEvent = new CustomEvent(formName + '_setTexteditor_' + input.name, {\r\n                    detail: {\r\n                        content: val\r\n                    }\r\n                })\r\n                document.dispatchEvent(setTexteditorEvent)\r\n                break\r\n            default: //radio, select-one' text, password, hidden, email, tel, textarea...... all others\r\n            console.log('type',type,input.name,input)\r\n                input.value = val\r\n                //image\r\n        }\r\n    })\r\n    return data\r\n}\r\n\r\nfunction setSelectOptions(formName, selectName, values) {\r\n    let select = document.getElementsByName(formName)[0].querySelectorAll('[name=\"' + selectName + '\"]')\r\n\r\n\r\n    $('#' + id).children('option').remove();\r\n    /*if(values) for ( var i = 0; i < values.length; i++ ) {\r\n    \t$('#'+id).append(new Option(values[i].label, values[i].id, false, false));\r\n    }*/\r\n    $.each(values, function (key, value) {\r\n        $('#' + id).append(new Option(value, key, false, false));\r\n    })\r\n    $('#' + id).trigger('change');\r\n}\r\n\r\nexport function field(obj, fieldPath, value) {\r\n    // split the field into tokens\r\n    if (obj === undefined || fieldPath === undefined || obj === null) return\r\n    var tokens = fieldPath.split('.');\r\n    // if there's more than one token, this field is an object\r\n    if (tokens.length > 1) {\r\n        var subObj = tokens[0];\r\n        // define the object\r\n        if (!obj[subObj]) obj[subObj] = {};\r\n        // call field again on the embedded object\r\n        var firstDot = fieldPath.indexOf('.');\r\n        return field(obj[subObj], fieldPath.substr(firstDot + 1), value);\r\n    } else {\r\n        var arr = fieldPath.split('[');\r\n        if (arr.length > 1) {\r\n            if (!obj[arr[0]]) obj[arr[0]] = [];\r\n            if (value !== undefined) obj[arr[0]].push(value)\r\n            else return obj[arr[0]][arr[1].slice(0, -1)] //remove last char or arr[1] that must be a ']'\r\n        } else {\r\n            if (value !== undefined) obj[fieldPath] = value; // no embedded objects, just fieldPath assignment\r\n            else return obj[fieldPath]\r\n        }\r\n    }\r\n}\r\n\r\nimport formr from './formr.riot'\r\nimport ialert from './ialert.riot'\r\nimport ibutton from './ibutton.riot'\r\nimport icheckbox from './icheckbox.riot'\r\nimport icolorpicker from './icolorpicker.riot'\r\nimport idatetimepicker from './idatetimepicker.riot'\r\nimport iimagepicker from './iimagepicker.riot'\r\nimport ihidden from './ihidden.riot'\r\nimport ihr from './ihr.riot'\r\nimport ipassword from './ipassword.riot'\r\nimport iradio from './iradio.riot'\r\nimport irange from './irange.riot'\r\nimport irow from './irow.riot'\r\nimport iselect from './iselect.riot'\r\nimport itext from './itext.riot'\r\nimport itexteditor from './itexteditor.riot'\r\nimport ititle from './ititle.riot'\r\nimport jaddon from './jaddon.riot'\r\nimport jhelp from './jhelp.riot'\r\nimport jicon from './jicon.riot'\r\nimport jlabel from './jlabel.riot'\r\nimport jtooltip from './jtooltip.riot'\r\n\r\n\r\nriot.register('formr', formr)\r\nriot.register('ialert', ialert)\r\nriot.register('ibutton', ibutton)\r\nriot.register('icheckbox', icheckbox)\r\nriot.register('icolorpicker', icolorpicker)\r\nriot.register('idatetimepicker', idatetimepicker)\r\nriot.register('iimagepicker', iimagepicker)\r\nriot.register('ihidden', ihidden)\r\nriot.register('ihr', ihr)\r\nriot.register('ipassword', ipassword)\r\nriot.register('iradio', iradio)\r\nriot.register('irange', irange)\r\nriot.register('irow', irow)\r\nriot.register('iselect', iselect)\r\nriot.register('itext', itext)\r\nriot.register('itexteditor', itexteditor)\r\nriot.register('jaddon', jaddon)\r\nriot.register('jhelp', jhelp)\r\nriot.register('jicon', jicon)\r\nriot.register('jlabel', jlabel)\r\nriot.register('jtooltip', jtooltip)\r\n","<iimagepicker>\r\n    <jlabel field={props.field}></jlabel>\r\n    <jtooltip tip={props.field.tip}></jtooltip>\r\n    <span class=\"inputFeedback\"></span>\r\n    <small class=\"inputFeedbackMsg\"></small>\r\n    IIMAGEPICKER TODO\r\n    <div class=\"input-group\">\r\n        <jaddon field={props.field} placement='left'></jaddon>\r\n        <input { ...props.field } type=\"text\" class=\"form-control {props.field.class}\" name={props.field.id} value={props.field.value} autocomplete=\"on\" id={}>\r\n        <jaddon field={props.field} placement='right'></jaddon>\r\n    </div>\r\n    <jhelp help={props.field.help}></jhelp>\r\n</iimagepicker>","<ihidden>\r\n    <input { ...props.field } type=\"hidden\" class=\"form-control {props.field.class}\" name={props.field.id} value={props.field.value} id={}>\r\n</ihidden>\r\n","<ipassword>\r\n    <jlabel field={props.field}></jlabel>\r\n    <jtooltip tip={props.field.tip}></jtooltip>\r\n    <span class=\"inputFeedback\"></span>\r\n    <small class=\"inputFeedbackMsg\"></small>\r\n    <div class=\"input-group\">\r\n        <jaddon field={props.field} placement='left'></jaddon>\r\n        <input { ...props.field } type=\"password\" class=\"form-control {props.field.class}\" name={props.field.id} value={props.field.value} autocomplete=\"on\" id={}>\r\n        <jaddon field={props.field} placement='right'></jaddon>\r\n    </div>\r\n    <jhelp help={props.field.help}></jhelp>\r\n</ipassword>\r\n","<jaddon>\r\n    <div if={props.placement=='left' && props.field.icon!='none' } class=\"h-100 input-group-prepend\">\r\n        <span class=\"input-group-text\">\r\n            <jicon field={props.field}></jicon>\r\n        </span>\r\n    </div>\r\n    <div if={props.placement=='right' && props.field.buttons} class=\"h-100 input-group-append\">\r\n        <ibutton each={button in props.field.buttons} field={button}></ibutton>\r\n    </div>\r\n</jaddon>\r\n","<jhelp>\r\n    <small if={props.help} class=\"text-muted mb-1 mr-1\">{i18n(props.help)}</small>\r\n</jhelp>","<jicon>\r\n    <i class=\"{selectIcon(props.field)} fa-fw\"></i>\r\n</jicon>","\n\nimport * as riot from 'riot'\n\nimport * as exports from './formr.js'\nObject.entries(exports).forEach(([name, exported]) => window[name] = exported)\nimport App from './app.riot'\n\n\nwindow.data = {\n    mydatetimepicker: 1488136398547,\n    checboxTransport: {\n        car: false,\n        bus: true\n    },\n    emailInrRow: \"emailInrRow changed\",\n    fallDescription: {\n        fr: \"fallDescription fr\",\n        en: \"fallDescription en\"\n    },\n    mayrange: 10,\n    flyDescription: {\n        fr: \"flyDescriptionf fr\",\n        en: \"flyDescription en\"\n    },\n    genre: \"boy\",\n    music: [\"piano\"],\n    mycolor: \"blue\",\n    mydate: \"date changed\",\n    mypassword: \"mypassword changrd\",\n    mytextarea: {\n        fr: \"mytextarea fr\",\n        en: \"mytextarea en\"\n    },\n    mytextedit: {\n        fr: \"mytextedit fr\",\n        en: \"mytextedit en\"\n    },\n    mytextwithbuttons: \"mytextwithbuttons changed\",\n    passwordInRow: \"passwordInRow changed\",\n    radioAnimal: \"cat\",\n    switchTest: {\n        bird: \"fall\",\n        snake: false,\n        elephant: true\n    },\n    switchTestAlone: \"fall_alone\"\n}\n\n\n\n\n\nwindow.fields = {\n    form1: {\n        attr: {\n            lang: 'fr',\n            langs: ['fr', 'en'],\n            proposeTranslate: true\n        },\n        desc: [\n            {\n                type: 'title',\n                title: 'Hello',\n                icon: 'fas fa-skull-crossbones',\n                help: 'Help Please verify your info before',\n            },\n            {\n                type: 'alert',\n                color: 'danger',\n                message: \"Ceci est un message d'alerte\",\n                icon: 'fas fa-exclamation-triangle',\n                tip: 'Tip Please verify your info before',\n                help: 'Help Please verify your info before',\n            },\n            {\n                type: 'datetimepicker',\n                id: 'mydatetimepicker',\n                label: 'Date de naissance',\n                enableTime:true,\n                tip: 'Tip Please verify your info before',\n                help: 'Help Please verify your info before',\n                value:56564415\n            },\n            {\n                id: 'genre',\n                type: 'select',\n                label: 'Genre',\n                value: 'girl',\n                tip: 'Tip Please verify your info before',\n                help: 'Help Please verify your info before',\n                opts: [\n                    {\n                        label: 'Garcon',\n                        value: 'boy'\n                    },\n                    {\n                        label: 'Fille',\n                        value: 'girl'\n                    }\n                ]\n            },\n            {\n                id: 'music',\n                type: 'select',\n                multiple: true,\n                tag: true,\n                userAddOption: true,\n                label: 'Musique',\n                required: true,\n                value: ['guitar'],\n                tip: 'Tip Please verify your info before',\n                help: 'Help Please verify your info before',\n                opts: [\n                    {\n                        label: 'Piano',\n                        value: 'piano'\n                    },\n                    {\n                        label: 'Guitare',\n                        value: 'guitar',\n                        aaaselected: true\n                    }\n                ]\n            },\n            {\n                id: 'mycolor',\n                label: 'Couleur principale',\n                type: 'colorpicker',\n                tip: 'Tip Please verify your info before',\n                help: 'Help Please verify your info before',\n                value: 'red'\n            },\n            {\n                id: 'mytextedit',\n                label: 'Texte principal',\n                type: 'texteditor',\n                multilang: true,\n                proposeTranslate: true,\n                tip: 'Tip Please verify your info before',\n                help: 'Help Please verify your info before',\n                value: '<p><strong><s><u>Mon premier text    </u></s></strong><strong style=\"color: rgb(240, 102, 102);\"><s><u>hkgkghkghkgh</u></s></strong><sup style=\"color: rgb(240, 102, 102);\"><strong><s><u>ghkghkghk</u></s><em><u>kghkghkg</u></em></strong></sup></p>'\n            },\n            {\n                id: 'mytextarea',\n                type: 'textarea',\n                rows: 8,\n                value: 'Eheh l\\'ami quoi de neuf c\\'est long tout ce tete sinon <h2>ca va? la fa</h2>mille? les amis? la santé? bonsoir enfin au revoir anticonstitutionnelement ;) bisous',\n                label: 'Lettre pour chirac',\n                multilang: true,\n                required: true,\n                icon: 'fas fa-running',\n                tip: 'Il faut bien écrire vous avez affaire avec un président',\n                help: 'Help Please verify your info before'\n            },\n            {\n                id: 'mayrange',\n                icon: 'fas fa-running',\n                type: 'range',\n                label: 'Zoom',\n                tip: 'select the right zoom',\n                help: 'select the right zoom',\n                onchange: 'alert(\"zoom\")',\n                oninput: 'alert(\"zoom\")',\n            },\n            {\n                id: 'mytextwithbuttons',\n                type: 'text',\n                required: true,\n                size: 10,\n                value: 'First item',\n                label: 'Id de l\\'ambulance',\n                icon: 'fas fa-ambulance',\n                minlength: 4,\n                buttons: [\n                    {\n                        icon: 'fas fa-running',\n                        onclick: 'dosomething'\n                    },\n                    {\n                        title: 'do it',\n                        onclick: 'dosomething'\n                    }\n                ],\n                tip: 'Il faut bien écrire vous avez affaire avec un président',\n                help: 'Help Please verify your info before',\n            },\n            {\n                id: 'row0',\n                type: 'row',\n                desc: [\n                    {\n                        id: 'emailInrRow',\n                        type: 'email',\n                        size: 10,\n                        value: 'First item',\n                        label: 'Id de l\\'ambulance',\n                        buttons: [\n                            {\n                                icon: 'fas fa-running',\n                                onclick: 'dosomething'\n                            },\n                            {\n                                title: 'test',\n                                onclick: 'dosomething'\n                            }\n                        ]\n                    },\n                    {\n                        id: 'passwordInRow',\n                        type: 'password',\n                        //pattern:'(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z]).{8,}',\n                        //required:true,\n                        value: 'Second item',\n                        label: 'Mot de passe'\n                    },\n                ]\n            },\n            {\n                id: 'mypassword',\n                type: 'password',\n                pattern: '(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z]).{8,}',\n                patternInfo: '8 characters, 1 upper, 1 number',\n                //required:true,\n                value: 'Second item',\n                label: 'Mot de passe secure',\n                buttons: [\n                    {\n                        icon: 'fas fa-running',\n                        onclick: 'dosomething'\n                    },\n                    {\n                        title: 'Do it',\n                        onclick: 'dosomething'\n                    }\n                ],\n                tip: 'Tip Please verify your info before',\n                help: 'Help Please verify your info before',\n            },\n            {\n                id: 'mydate',\n                type: 'datetime',\n                size: 10,\n                value: 'Third item',\n                label: 'date',\n                buttons: [\n                    {\n                        icon: 'fas fa-running',\n                        onclick: 'dosomething'\n                    },\n                    {\n                        title: 'Do it',\n                        onclick: 'dosomething'\n                    }\n                ],\n                tip: 'Tip Please verify your info before',\n                help: 'Help Please verify your info before',\n            },\n            {\n                id: 'radioAnimal',\n                type: 'radio',\n                label: 'Choix animal',\n                value: 'dog',\n                opts: [\n                    {\n                        label: 'chien',\n                        id: 'dog',\n                        tip: 'Il faut bien écrire vous avez affaire avec un président'\n                    },\n                    {\n                        label: 'chat',\n                        achecked: true,\n                        id: 'cat',\n                        help: 'Help Please verify your info before'\n                    }\n                ]\n            },\n            {\n                id: 'checboxTransport',\n                type: 'checkbox',\n                label: 'Choix transport',\n                opts: [\n                    {\n                        label: 'Voiture',\n                        id: 'car',\n                        help: 'Il faut bien écrire vous avez affaire avec un président'\n                    },\n                    {\n                        label: 'Bus',\n                        id: 'bus',\n                        tip: 'ça pique',\n                        value: true\n                    }\n                ]\n            },\n            {\n                id: 'switchTest',\n                type: 'switch',\n                label: 'Choix animal',\n                opts: [\n                    {\n                        checkedLabel: 'vole',\n                        uncheckedLabel: 'tombe',\n                        checkedValue: 'fly',\n                        uncheckedValue: 'fall',\n                        value: 'fly',\n                        label: 'Oiseau',\n                        id: 'bird',\n                        help: 'Il faut bien écrire vous avez affaire avec un président',\n                        ctrl: {\n                            checked: [\"flyDescription\"],\n                            unchecked: [\"fallDescription\"]\n                        }\n                    },\n                    {\n                        label: 'Serpent',\n                        id: 'snake',\n                        tip: 'ça pique',\n                        checked: true\n                    },\n                    {\n                        label: 'Elephant',\n                        id: 'elephant',\n                        tip: 'ça pique',\n                        value: 'yes'\n                    }\n                ]\n            },\n            {\n                id: 'switchTestAlone',\n                type: 'switch',\n                label: 'Choix animal alone',\n                opts: [\n                    {\n                        checkedLabel: 'vole alone',\n                        uncheckedLabel: 'tombe alone',\n                        checkedValue: 'fly_alone',\n                        uncheckedValue: 'fall_alone',\n                        value: 'fly_alone',\n                        label: 'Oiseau alone',\n                        help: 'Il faut bien écrire vous avez affaire avec un président',\n                        ctrl: {\n                            checked: [\"flyDescription\"],\n                            unchecked: [\"fallDescription\"]\n                        }\n                    }\n                ]\n            },\n            {\n                type: 'textarea',\n                id: \"flyDescription\",\n                rows: 10,\n                value: 'Un très beau vol que nous avons la, tout à fait aérodynamique cette chouette!',\n                label: 'Description du vol',\n                multilang: true,\n                required: true,\n                icon: 'fas fa-kiwi-bird',\n                tip: 'Précisez l\\'oiseau svp',\n                help: 'Help Please verify your info before',\n            },\n            {\n                type: 'textarea',\n                id: \"fallDescription\",\n                rows: 10,\n                value: 'Quelle chute c\\'est fantastique l\\'oiseau a littéralement EXPLOSé wow!',\n                label: 'Description de la chute',\n                multilang: true,\n                required: true,\n                icon: 'fas fa-bomb',\n                tip: 'Précisez l\\'oiseau svp',\n                help: 'Help Please verify your info before',\n            },\n            {\n                type: 'hr',\n                icon: 'fas fa-plane',\n                label: 'Take your plane',\n                help: 'Please verify your info before'\n            },\n            {\n                icon: 'fas fa-running',\n                type: 'button',\n                color: 'danger',\n                class: 'btn-block btn-lg',\n                title: 'GO !',\n                onclick: 'dosomething',\n                waitValid: true,\n                tip: 'Tip Please verify your info before',\n                help: 'Help Please verify your info before',\n            },\n            {\n                id: 'i4',\n                type: 'button',\n                size: 23,\n                title: 'Fourth item',\n                icon: 'fas fa-restroom',\n                onclick: 'dosomething'\n            },\n        ]\n    },\n    form2: {\n        attr: {\n            lang: 'fr',\n            langs: ['fr', 'en'],\n            proposeTranslate: true\n        },\n        desc: [\n            {\n                id: 'switchTestAlone',\n                type: 'switch',\n                label: 'Choix animal alone',\n                opts: [\n                    {\n                        checkedLabel: 'vole alone',\n                        uncheckedLabel: 'tombe alone',\n                        checkedValue: 'fly_alone',\n                        uncheckedValue: 'fall_alone',\n                        value: 'fly_alone',\n                        label: 'Oiseau alone',\n                        help: 'Il faut bien écrire vous avez affaire avec un président',\n                        ctrl: {\n                            checked: [\"flyDescription\"],\n                            unchecked: [\"fallDescription\"]\n                        }\n                    }\n                ]\n            },\n            {\n                type: 'textarea',\n                id: \"flyDescription\",\n                rows: 10,\n                value: 'Un très beau vol que nous avons la, tout à fait aérodynamique cette chouette!',\n                label: 'Description du vol',\n                multilang: true,\n                required: true,\n                icon: 'fas fa-kiwi-bird',\n                tip: 'Précisez l\\'oiseau svp',\n                help: 'Help Please verify your info before',\n            },\n            {\n                type: 'textarea',\n                id: \"fallDescription\",\n                rows: 10,\n                value: 'Quelle chute c\\'est fantastique l\\'oiseau a littéralement EXPLOSé wow!',\n                label: 'Description de la chute',\n                multilang: true,\n                required: true,\n                icon: 'fas fa-bomb',\n                tip: 'Précisez l\\'oiseau svp',\n                help: 'Help Please verify your info before',\n            }\n        ]\n    }\n}\n\nriot.register('app', App)\nriot.mount('app')\n","<app>\r\n    <div class=\"container\">\r\n        <formr id=\"form1\"></formr>\r\n        <formr id=\"form2\"></formr>\r\n    </div>\r\n</app>\r\n"],"names":["COMPONENTS_IMPLEMENTATION_MAP","Map","DOM_COMPONENT_INSTANCE_PROPERTY","Symbol","PLUGINS_SET","Set","IS_DIRECTIVE","ATTRIBUTES_KEY_SYMBOL","TEMPLATE_KEY_SYMBOL","globals","Object","freeze","VALUE_ATTRIBUTE","isFunction","value","noop","this","callOrAssign","source","prototype","constructor","clearChildren","children","Array","from","forEach","n","parentNode","removeChild","SIMPLE","bindingTypes","EACH","IF","TAG","SLOT","ATTRIBUTE","TEXT","VALUE","expressionTypes","EVENT","indexOf","iOF","append","get","parent","start","end","before","isSelect","noSelection","child","insertBefore","selected","selectedIndex","call","querySelectorAll","eqeq","a","b","identity","O","moreNodes","moreStart","moreEnd","lessNodes","lessStart","lessEnd","compare","length","m","l","next","list","i","nextSibling","remove","findK","ktr","j","lo","hi","mid","smartDiff","futureNodes","futureStart","futureEnd","futureChanges","currentNodes","currentStart","currentEnd","currentChanges","currentLength","diff","live","currentIndex","set","has","applyDiff","rows","cols","v","d","k","r","c","pv","cv","pd","outer","diffIdx","OND","minLen","link","tresh","keymap","idxInOld","newi","oldi","prev","ptr","HS","checkType$1","element","type","isSvg","el","owner","ownerSVGElement","isTemplate","isNil","content","isObject","EachBinding","seal","childrenMap","node","root","condition","evaluate","template","isTemplateTag","nodes","getKey","indexName","itemName","afterPlaceholder","placeholder","[object Object]","scope","parentScope","update","collection","items","newChildrenMap","batches","binding","item","index","context","_ref2","extendScope","create","key","oldItem","Boolean","mustFilterItem","componentTemplate","clone","cloneNode","mustMount","meta","fragment","dom","avoidDOMInjection","childNodes","createTemplateMeta","push","mount","delete","createPatch","options","currentSame","futureSame","isReversed","domdiff","patch","values","unmountRedundant","fn","redundant","info","pop","unmount","map","_ref","IfBinding","mustUnmount","pristine","REMOVE_ATTRIBUTE","SET_ATTIBUTE","attributeExpression","_ref6","oldValue","name","isBoolean","getMethod","normalizeValue","attributes","entries","_ref5","setAllAttributes","keys","attribute","removeAttribute","removeAllAttributes","RE_EVENTS_PREFIX","normalizeValue$1","expressions","1","_ref7","normalizedEventName","replace","removeEventListener","addEventListener","_ref8","childNodeIndex","target","val","nodeType","Node","COMMENT_NODE","textNode","document","createTextNode","replaceChild","data","expression","Expression","apply","create$2","assign","extendParentScope","attr","reduce","acc","string","_","toUpperCase","dashToCamelCase","evaluateAttributeExpressions","SlotBinding","cachedParentScope","templateData","slots","find","_ref10","id","create$6","html","bindings","createDOM","getTemplateScope","moveSlotInnerContent","slot","firstChild","mustRemoveRoot","slotBindings","_ref12","concat","TagBinding","tag","getComponent","component","slotsToMarkup","keepRootTag","_ref4","_ref9","method","0","_ref3","3","_ref13","4","_ref11","fixTextExpressionsOffset","textExpressionsOffset","e","createDOMTree","container","ownerDocument","importNode","window","DOMParser","parseFromString","documentElement","createSVGTree","createElement","innerHTML","createHTMLTree","injectDOM","moveChildren","appendChild","TemplateChunk","bindingsData","createTemplateDOM","Error","templateTagOffset","Math","max","selector","redundantAttribute","querySelector","bindingExpressions","create$5","defineProperty","enumerable","writable","configurable","defineProperties","properties","ATTRIBUTE$1","VALUE$1","dashToCamelCase$1","panic","message","domToArray","els","isArray","test","toString","$","ctx","normalize","attrs","props","prop","setAttribute","names","parseNodes","CSS_BY_NAME","getStyleNode","style","head","cssManager","css","inject","join","getName","tagName","toLowerCase","COMPONENT_CORE_HELPERS","COMPONENT_LIFECYCLE_METHODS","shouldUpdate","onBeforeMount","onMounted","onBeforeUpdate","onUpdated","onBeforeUnmount","onUnmounted","MOCKED_TEMPLATE_INTERFACE","createComponent","exports","templateFn","components","componentTemplateFactory","camelToDashCase","createSubcomponents","componentAPI","add","curry","_len","arguments","_key","_len2","args","_key2","enhanceComponentAPI","defaults","state","defineComponent","preserveRoot","evaluateProps","attributeExpressions","DOMattributesToObject","computeState","oldState","newState","initialProps","runPlugins","updateValues","createAttributeBindings","addCssHook","newProps","filter","bind","DOM_COMPONENT_INSTANCE_PROPERTY$1","COMPONENTS_IMPLEMENTATION_MAP$1","PLUGINS_SET$1","register","plugin","checkField","field","desc","fields","ctrlRun","callType","size","ev","targetForm","closest","feedBackElt","feedBackMsgElt","validity","isValid","valid","msgs","msg","disabled","valueMissing","typeMismatch","tooShort","minLength","tooLong","maxLength","badInput","stepMismatch","rangeOverflow","rangeUnderflow","min","patternMismatch","getAttribute","self","i18n","nbInvalidFields","console","log","formName","formElt","getElementsByName","elt","split","checked","classList","getFormValues","setFormValues","validate","er","seter","color","class","tip","help","action","param","event","alert","title","onclick","waitValid","isChecked","option","checkedValue","ctrlToString","which","ctrl","uncheckedLabel","checkedLabel","label","uncheckedValue","buildId","formId","pickr","Pickr","theme","comparison","swatches","preview","opacity","hue","interaction","hex","rgba","hsla","hsva","cmyk","input","clear","save","cancel","strings","on","instance","setColor","_root","toRGBA","hide","detail","datetimepicker","flatpickr","allowInput","enableTime","dateFormat","altInput","altFormat","defaultDate","locale","lang","setDate","epoch","step","multiple","selectr","Selectr","taggable","userAddOption","setValue","isSelected","currentLang","langs","defaultLang","multilang","idLang","langName","btnLangColor","selectLang","proposeTranslate","translate","editor","Quill","modules","toolbar","header","background","align","script","indent","direction","font","getContents","getText","separator","required","obj","fieldPath","undefined","tokens","subObj","firstDot","substr","arr","slice","updateAll","dispatchEvent","Event","fr","en","selectIcon","ret","icon","autoIcons","tags","logon","address","url","google","twitter","facebook","date","month","datetime","tel","mail","email","password","number","button","possibleId","types","text","checkbox","eltFromId","eltFromValue","riot.register","formr","ialert","ibutton","icheckbox","icolorpicker","idatetimepicker","ihr","iradio","irange","irow","iselect","itext","itexteditor","placement","buttons","jlabel","jtooltip","x","setSelectrEvent","CustomEvent","opt","setColorEvent","setDatetimeEvent","setTexteditorEvent","exported","mydatetimepicker","checboxTransport","car","bus","emailInrRow","fallDescription","mayrange","flyDescription","genre","music","mycolor","mydate","mypassword","mytextarea","mytextedit","mytextwithbuttons","passwordInRow","radioAnimal","switchTest","bird","snake","elephant","switchTestAlone","form1","opts","aaaselected","onchange","oninput","minlength","pattern","patternInfo","achecked","unchecked","form2","componentName","mountComponent"],"mappings":"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"}